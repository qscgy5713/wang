<?php
class GameReportAction extends AgentAction {
    protected $effectiveMemberLimit = 15000;//有效會員 的 有效投注
    //制度代理 判定有效會員
   
    //TODO:7 遊戲報表
    public function index(){
        
        //使用 common.php filterStr($data) 公用函數 過濾取得輸入的帳號、密碼
        $request = $this->getRequest();
        
        //代理線開始
        $CommonAgentTree = D("CommonAgentTree");
        $loginArray = array(
            0 => array(
                "agentTree"=>$_SESSION['Agent']['tree'],
                "agentId"=>$_SESSION['Agent']['id'],
                "agentAccount"=>$_SESSION['Agent']['account'],
            )
        );
        
        if(empty($request["agentTree"])
            || !preg_match("/".$_SESSION['Agent']['tree']."/i", $request["agentTree"])
            || $request["agentTree"] == $_SESSION['Agent']['tree']
            ){
                $comeAgentTree = $_SESSION['Agent']['tree'];
                $comeAgentId = $_SESSION['Agent']['id'];
                $comeAgentAccount = $_SESSION['Agent']['account'];
                $comeAgentmode = $_SESSION['Agent']['mode'];
                $comeAgentHead = $_SESSION['Agent']['head'];
        } else {
            $comeAgentTree = $request["agentTree"];
            $comeReplace = str_replace ($_SESSION['Agent']['tree'],"",$comeAgentTree);
            $exArray = explode(",",$comeReplace);
            $return = $CommonAgentTree->getAgentTreeDataByManyAgentId($exArray);
            if($return === false){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
            }
            //var_dump($return);
            foreach ($return as $value){
                array_push($loginArray,$value);
            }
            //var_dump($loginArray);
            $comeAgentAccount = $return["agentAccount"];
            $comeAgentmode = $return['agentMode'];
            $comeAgentHead = $return['agentHead'];
        }
        //判定是否是 制度代理
        //0自訂佔成 1制度佔成
        $isSystemMode = false;
        if($comeAgentmode == 1){
            $isSystemMode = true;
        }
        
        
        $exArray = explode(",",$comeAgentTree);
        $comeAgentId = $exArray[count($exArray)-2];
        //代理線結束
        
        //日期選單 開始
        $today = date('Y-m-d');
        $startTime = $today.' 00:00:00';
        $endTime = $today.' 23:59:59';
        
        if(isset($request['startTime'])){
            $startTime = $request['startTime'];
        }
        if(isset($request['endTime'])){
            $endTime = $request['endTime'];
        }
        
        if(date('D') === 'Mon') {
            $tsThisWeek = strtotime('today');
        } else {
            $tsThisWeek = strtotime('last monday');
        }
        $tsYesterday = strtotime('yesterday');
        $tsLastMonth = strtotime('last month')-((60*60*24*(date('d')-1)));
        $tsThisMonth = strtotime('this month')-((60*60*24*(date('d')-1)));
        $lastWeekA = date('Y-m-d',$tsThisWeek-(60*60*24*7));
        $lastWeekB = date('Y-m-d',$tsThisWeek-(60*60*24*1));
        $thisWeekA = date('Y-m-d',$tsThisWeek+(60*60*24*0));
        $thisWeekB = date('Y-m-d',$tsThisWeek+(60*60*24*6));
        $yesterday = date('Y-m-d',$tsYesterday);
        $lastMonthA = date('Y-m-d',$tsLastMonth);
        $lastMonthB = date('Y-m-d',$tsLastMonth+(60*60*24*(cal_days_in_month(CAL_GREGORIAN,date("m",strtotime($lastMonthA)),date("Y", strtotime($lastMonthA)))-1)));
        $thisMonthA = date('Y-m-d',$tsThisMonth);
        $thisMonthB = date('Y-m-d',$tsThisMonth+(60*60*24*(cal_days_in_month(CAL_GREGORIAN,date("m"),date("Y"))-1)));
        
        $this->assign("startTime",$startTime);//查詢開始時間
        $this->assign("endTime",$endTime);//查詢最後時間
        
        $this->assign("today",$today);//今日
        $this->assign("yesterday",$yesterday);//昨日
        $this->assign("thisWeekA",$thisWeekA);//本週第一天
        $this->assign("thisWeekB",$thisWeekB);//本週最後一天
        $this->assign("lastWeekA",$lastWeekA);//上週第一天
        $this->assign("lastWeekB",$lastWeekB);//上週最後一天
        $this->assign("thisMonthA",$thisMonthA);//本月第一天
        $this->assign("thisMonthB",$thisMonthB);//本月最後一天
        $this->assign("lastMonthA",$lastMonthA);//上月第一天
        $this->assign("lastMonthB",$lastMonthB);//上月最後一天
        //日期選單 結束
        
        
        $gameShowArray = array();
        
        $agentArray = array();
        $agentGivenArray = array();
        $memberArray = array();
        $memberGivenArray = array();
        
        $agentTotalBettingMoney = 0;//代理總投注額
        $agentTotalSurplus = 0;//代理總輸贏
        $agentTotalEffective = 0;//代理總洗碼
        $agentTotalBetNumber = 0;//代理總住單
        $agentTotalGiven = 0;//代理總贈點
        $agentTotalTopMoney = 0;//代理總上級金額
        $agentTotalRatioMoney = 0;//代理總佔成金額
        $agentTotalUnderMoney = 0;//代理總下級金額
        
        
        $memberTotalBettingMoney = 0;//會員總投注額
        $memberTotalSurplus = 0;//會員總輸贏
        $memberTotalEffective = 0;//會員總洗碼
        $memberTotalBetNumber = 0;//會員總住單
        $memberTotalGiven = 0;//會員總贈點
        $memberTotalTopMoney = 0;//會員總上級金額
        $memberTotalRatioMoney = 0;//會員總佔成金額
        
        $GameInfo = D("GameInfo");
        $CommonAgent = D("CommonAgent");
        $CommonMemberWalletLog = D("CommonMemberWalletLog");
        
        $gameArray = array(
            "ab"=>1,
            "sb"=>1,
            "bj"=>1,
            "bg"=>1,
            "dg"=>1,
        );
        foreach($gameArray as $key => $value){
            $gameCode = ucfirst($key);
            $data = array(
                "game_code"=>$gameCode
            );
            $return = $GameInfo->getGameIdDataByGameCode($data,$err);
            if($return === false){
                $this->error($err);
            }
            if(empty($return)){
                continue;
            }
            
            $gameName = $return['game_name'];
            $data = array(
                "agent_tree" => $comeAgentTree,
                "game_code" => $gameCode,
                "report_orderDate"=> array(
                    'startTime'=>strtotime($startTime),
                    'endTime'=>strtotime($endTime)
                ),
            );
            
            $return = $GameInfo->getOneGameReportData($data,$err);
            if($return === false){
                $this->error($err);
            }
            foreach ($return as $key => $value){
                if(empty($value)){
                    $return[$key] = 0;
                }
            }
            $gameShowArray[$gameName] = $return;
        }
        //var_dump($gameShowArray);exit();
        
        if($isSystemMode){
            //搜尋代理有效會員 開始
            $data = array(
                "agent_id" => $comeAgentId,
                "agent_tree" => $comeAgentTree,
                "report_effective"=>$this->effectiveMemberLimit,
                "report_orderDate"=> array(
                    'startTime'=>strtotime($startTime),
                    'endTime'=>strtotime($endTime)
                ),
                "gameArray" => $gameArray
            );
            $effectiveMemberReturn = $GameInfo->getALLGameEffectiveMemberData($data,$err);
            if($effectiveMemberReturn === false){
                $this->error($err);
            }
            $effectiveMemberNumber = $effectiveMemberReturn;
            //搜尋代理有效會員 結束
        }
        
        
        
        //搜尋代理 開始
        $data = array(
            "agent_id" => $comeAgentId,
            "agent_tree" => $comeAgentTree,
            "report_orderDate"=> array(
                'startTime'=>strtotime($startTime),
                'endTime'=>strtotime($endTime)
            ),
            "gameArray" => $gameArray
        );
        $reportReturn = $GameInfo->getAllGameReportData($data,$err);
        if($reportReturn === false){
            $this->error($err);
        }
        //var_dump($reportReturn);
        
        $data = array(
            "agent_id"=>$comeAgentId,
            "agent_tree"=>$comeAgentTree,
            "startTime"=>strtotime($startTime),
            "endTime"=>strtotime($endTime),
            "groupBy"=>"agent_id",
            "walletLog_type"=>'all' //搜尋返水
        );
        $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        $givenArray = $return;
        foreach($givenArray as $key => $value){
            $agentGivenArray[$value['agent_account']] = $value;
        }
        //var_dump($agentGivenArray);exit();
        
        foreach($reportReturn as $key => $value){
            //代理
            $newAgnetTree = str_replace($comeAgentTree,"",$value['agent_tree']);
            $agnetTreeArray = explode(",",$newAgnetTree);
            
            $ratioArray = explode(',',$value['ratioTree']);//佔成樹
            $agnetTreeNumber = explode(",",$comeAgentTree);
            $agnetTreeNumber = count($agnetTreeNumber)-1;
            
            //贈點
            $agentGivenValue = 0;
            if(!empty($agentGivenArray[$value['agent_account']])){
                $agentGivenValue = $agentGivenArray[$value['agent_account']]['allMoney'];
                $agentTotalGiven += (int)$agentGivenValue;
            }
            
            $agentTotalBettingMoney += (int)$value['allBettingMoney'];
            $agentTotalSurplus += (int)$value['allSurplus'];
            $agentTotalEffective += (int)$value['allEffective'];
            $agentTotalBetNumber += (int)$value['allBetNumber'];
            
            if(isset($agentArray[$agnetTreeArray[0]])){
                $agentArray[$agnetTreeArray[0]]["sumBettingMoney"] += (int)$value['allBettingMoney'];
                $agentArray[$agnetTreeArray[0]]["sumSurplus"] += (int)$value['allSurplus'];
                $agentArray[$agnetTreeArray[0]]["sumEffective"] += (int)$value['allEffective'];
                $agentArray[$agnetTreeArray[0]]["sumBetNumber"] += (int)$value['allBetNumber'];
                $agentArray[$agnetTreeArray[0]]["sumGivenMoney"] += (int)$agentGivenValue;
            } else {
                if(count($agnetTreeArray) > 1){
                    $data = array(
                        'agent_id' =>$agnetTreeArray[0],
                    );
                    $return = $CommonAgent->getAgentDataById($data);
                    if($return === false){
                        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
                    }
                    $agentAccount = $return['agent_account'];
                    $agentTree = $return['agent_tree'];
                    $ratioTree = $return['ratio_tree'];
                } else {
                    $agentAccount = $value['agent_account'];
                    $agentTree = $comeAgentTree.$newAgnetTree;
                    $ratioTree = $value['ratio_tree'];
                }
                $ratioMoney = (int)$value['allSurplus'];
                $data = array(
                    "agentAccount"=>$agentAccount,
                    "agentTree" => $agentTree,
                    "ratioTree" => $ratioTree,
                    "sumBettingMoney" => (int)$value['allBettingMoney'],
                    "sumSurplus" => (int)$value['allSurplus'],
                    "sumEffective" => (int)$value['allEffective'],
                    "sumBetNumber" => (int)$value['allBetNumber'],
                    "sumGivenMoney" => (int)$agentGivenValue,
                );
                $agentArray[$agnetTreeArray[0]] = $data;
            }
        }
        //搜尋代理 結束
        
        //搜尋會員 開始
        $data = array(
            "agent_id" => $comeAgentId,
            "report_orderDate"=> array(
                'startTime'=>strtotime($startTime),
                'endTime'=>strtotime($endTime)
            ),
            "gameArray" => $gameArray
        );
        $reportReturn = $GameInfo->getAllGameReportData($data,$err);
        if($reportReturn === false){
            $this->error($err);
        }
        //var_dump($reportReturn);exit();
        
        $data = array(
            "agent_id"=>$comeAgentId,
            "startTime"=>strtotime($startTime),
            "endTime"=>strtotime($endTime),
            "groupBy"=>"member_id",
            "walletLog_type"=>'all'
        );
        $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        $givenArray = $return;
        //var_dump($givenArray);exit();
        foreach($givenArray as $key => $value){
            $memberGivenArray[$value['member_account']] = $value;
        }
        foreach($reportReturn as $key => $value){
            //會員
            $memberTotalBettingMoney += (int)$value['allBettingMoney'];
            $memberTotalSurplus += (int)$value['allSurplus'];
            $memberTotalEffective += (int)$value['allEffective'];
            $memberTotalBetNumber += (int)$value['allBetNumber'];
            
            //贈點
            $memberGivenValue = 0;
            if(!empty($memberGivenArray[$value['member_account']])){
                $memberGivenValue = $memberGivenArray[$value['member_account']]['allMoney'];
                $memberTotalGiven += (int)$memberGivenValue;
                unset($memberGivenArray[$value['member_account']]);
            }
            
            if(isset($memberArray[$value['member_id']])){
                $memberArray[$value['member_id']]["sumBettingMoney"] += (int)$value['allBettingMoney'];
                $memberArray[$value['member_id']]["sumSurplus"] += (int)$value['allSurplus'];
                $memberArray[$value['member_id']]["sumEffective"] += (int)$value['allEffective'];
                $memberArray[$value['member_id']]["sumBetNumber"] += (int)$value['allBetNumber'];
                $memberArray[$memberGivenArray[0]]["sumGivenMoney"] += (int)$memberGivenValue;
                /*
                 if(empty($memberArray[$value['member_account']]["allPoint"])){
                 $memberArray[$value['member_account']]["allPoint"] = $value['allpLog'];
                 } else {
                 $memberArray[$value['member_account']]["allPoint"] .= ','.$value['allpLog'];
                 }*/
            } else {
                $data = array(
                    "memberId" => $value['member_id'],
                    "memberAccount" => $value['member_account'],
                    "sumBettingMoney" => (int)$value['allBettingMoney'],
                    "sumSurplus" => (int)$value['allSurplus'],
                    "sumEffective" => (int)$value['allEffective'],
                    "sumBetNumber" => (int)$value['allBetNumber'],
                    "sumGivenMoney" => (int)$memberGivenValue,
                    "ratioTree" => $value['ratio_tree']
                );
                $memberArray[$value['member_id']] = $data;
            }
        }
        //var_dump($memberGivenArray);exit();
        if(count($memberGivenArray) != 0){
            foreach($memberGivenArray as $key => $value){
                $data = array(
                    "memberId" => $value['member_id'],
                    "memberAccount" => $value['member_account'],
                    "sumBettingMoney" => 0,
                    "sumSurplus" => 0,
                    "sumEffective" => 0,
                    "sumBetNumber" => 0,
                    "sumGivenMoney" => (int)$value['allMoney'],
                    "ratioTree" => $value['ratio_tree']
                );
                $memberArray[$value['member_id']] = $data;
            }
        }
        
        //搜尋會員 結束
        
        //遊戲館讀取結束
        
        
        
        $agnetTreeNumber = explode(",",$comeAgentTree);
        $agnetTreeNumber = count($agnetTreeNumber)-1;
        foreach($agentArray as $key => $value){
            $value['agentAccount'];//代理帳號
            $value['agentTree'];//代理樹
            $ratioArray = explode(',',$value['ratioTree']);//佔成樹
            
            $topRatio = 0;
            for($i=0;$i<$agnetTreeNumber-1;$i++){
                $topRatio += $ratioArray[$i];
            }
            $underRatio = 0;
            for($i=$agnetTreeNumber;$i<count($ratioArray);$i++){
                $underRatio += $ratioArray[$i];
            }
            $agentRatio = $ratioArray[$agnetTreeNumber-1];
            
            $agentTopMoney = ($value['sumSurplus']-$agentArray[$key]['sumGivenMoney'])/100*$topRatio;//上級金額
            $agentTotalTopMoney += $agentTopMoney;
            $agentArray[$key]['topMoney'] = $agentTopMoney;
            $agentArray[$key]['agentRatio'] = $agentRatio.'%';//佔成
            
            $ratioMoney = ($value['sumSurplus']-$agentArray[$key]['sumGivenMoney'])/100*$agentRatio;//佔成金額
            
            $agentTotalRatioMoney += $ratioMoney;//總佔成金額
            $agentArray[$key]['ratioMoney'] = $ratioMoney;
            $agentArray[$key]['underRatio'] = $underRatio.'%';//下級佔成
            $agentArray[$key]['underMoney'] = ($value['sumSurplus']-$agentArray[$key]['sumGivenMoney'])/100*(100-$agentRatio);//佔成金額
        }
        
        
        
        foreach($memberArray as $key => $value){
            
            $ratioArray = explode(',',$value['ratioTree']);//佔成樹
            $topRatio = 0;
            for($i=0;$i<$agnetTreeNumber-1;$i++){
                $topRatio += $ratioArray[$i];
            }
            $underRatio = 0;
            for($i=$agnetTreeNumber;$i<count($ratioArray);$i++){
                $underRatio += $ratioArray[$i];
            }
            $agentRatio = $ratioArray[$agnetTreeNumber-1];
            
            $memberTopMoney = ($value['sumSurplus']-$memberArray[$key]['sumGivenMoney'])/100*$topRatio;
            $memberTotalTopMoney += $memberTopMoney;//總上級金額
            $memberArray[$key]['topMoney'] = $memberTopMoney;//上級金額
            
            $memberArray[$key]['agentRatio'] = $agentRatio.'%';//佔成
            $ratioMoney = ($value['sumSurplus']-$memberArray[$key]['sumGivenMoney'])/100*$agentRatio;//佔成金額
            $memberTotalRatioMoney += $ratioMoney;//總佔成金額
            $memberArray[$key]['ratioMoney'] = $ratioMoney;
            
        }
        
        $this->assign("effectiveMemberNumber",$effectiveMemberNumber);//有效會員數量
        
        $this->assign("agentTotalBettingMoney",$agentTotalBettingMoney);
        $this->assign("agentTotalSurplus",$agentTotalSurplus);
        $this->assign("agentTotalEffective",$agentTotalEffective);
        $this->assign("agentTotalRechargeMoney",$agentTotalRechargeMoney);
        $this->assign("agentTotalBetNumber",$agentTotalBetNumber);
        $this->assign("agentTotalGiven",$agentTotalGiven);
        
        $this->assign("memberTotalBettingMoney",$memberTotalBettingMoney);
        $this->assign("memberTotalSurplus",$memberTotalSurplus);
        $this->assign("memberTotalEffective",$memberTotalEffective);
        $this->assign("memberTotalRechargeMoney",$memberTotalRechargeMoney);
        $this->assign("memberTotalBetNumber",$memberTotalBetNumber);
        $this->assign("memberTotalGiven",$memberTotalGiven);
        
        
        $this->assign("agentEmpty","<tr><td colspan='4'>無代理報表</td></tr>");
        $this->assign("memberEmpty","<tr><td colspan='5'>無會員報表</td></tr>");
        
        
        $this->assign("loginArray",$loginArray);
        $this->assign("comeAgentAccount",$comeAgentAccount);
        $this->assign("comeAgentTree",$comeAgentTree);
        
        $this->assign("gameShowArray",$gameShowArray);
        $this->assign("agentArray",$agentArray);
        $this->assign("memberArray",$memberArray);
        $this->display();
    }
}