<?php
class GameAEAction extends MemberAction {
    const API_NAME = 'AE 泛亞電競';
    protected $power = false;
    protected $gameName = "Ae";
    /*
     * 如果有初始化 可以設定在初始化中
     */
    protected function _initialize() {
        parent::_initialize();
        $request = $this->getRequest();
        if(isset($request["MIS"]) && $request["MIS"]==="@@aaa123"){
            cookie('MIS','@@aaa123','expire=3600');
        }
        $MIS = cookie('MIS');
        if($MIS === "@@aaa123"){
            $this->power = true;
            //測試API
            $function_links = '';
            $function_links .= "<a href=\"__URL__/index\" target=\"_self\">創新帳號</a> | ";
            $function_links .= "<a href=\"__URL__/game_link\" target=\"_self\">遊戲連結</a> | ";
            $function_links .= "<a href=\"__URL__/game_link_guest\" target=\"_self\">遊客訪問</a> | ";
            $function_links .= "<a href=\"__URL__/deposit\" target=\"_self\">上點</a> | ";
            $function_links .= "<a href=\"__URL__/withdraw\" target=\"_self\">下點</a> | ";
            $function_links .= "<a href=\"__URL__/balance\" target=\"_self\">查點</a> | ";
            $function_links .= "<a href=\"__URL__/report\" target=\"_self\">報表</a>";
            $this->assign('function_links', $function_links);
            
            $this->assign('api_name', self::API_NAME);
            $this->assign('op_desc', '輸入參數按下送出');
        }
    }
    public function gameEnter(){
        $this->isMemberLoginShowErr();
        $this->assign('gameName','泛亞電競');
        //取得 遊戲連結 開始
        $data = array(
            "game_name" => $this->gameName
        );
        $return = $this->loginMember($data,$err);
        if($return === false){
            $this->assign('gameLink', "false");
            $this->assign('errMessage', $err);
            $this->display();
            return false;
        }
        $gameLink = $return;
        //取得 遊戲連結 結束
        $memberWallet = $_SESSION['Member']['money'];
        if($memberWallet != 0){
            $data = array(
                "transferMoney" => $memberWallet,
                "gameName" => $this->gameName
            );
            $return = $this->walletTransferGameBalance($data,$err);
            if($return === false){
                $this->assign('gameLink', "false");
                $this->assign('errMessage', $err);
                $this->display();
                return false;
            }
            $this->getMemberWalletMoney();//讀取電子錢包
        } else {
            cookie('member_newMember',null);//清除不讀轉移表的cookie
        }
        
        $this->addLastGameData();//成功進入遊戲 加入最後一館陣列中
        
        $this->assign('gameLink', $gameLink);//遊戲連結
        $this->display();
    }

    //1. 創新帳號
    public function index(){
        if(!$this->power){exit();}
        $account = 'test';
        $password = 'abcd1234';

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){
            //檢查是否有 account 傳入 並且不為空
            if (!isset($request['account']) || !strlen($request['account'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $account = $request['account'];

            //處理 password
            if (isset($request['password']) && strlen($request['password'])){
                $password = $request['password'];
            }

            $ae = D('GameAe');

            $err = null;
            $res = $ae->createMember(array(
                'account' => $account,
                'password' => $password,
            ), $err);

            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('account', $account);
        $this->assign('password', $password);

        $this->assign('method_name', 'createMember');
        $this->assign('method_desc', '建立一個新的遊戲帳號');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }

    //2. 取得遊戲連結
    public function game_link(){
        if(!$this->power){exit();}
        $account = 'test';

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){

            //檢查是否有 account 傳入 並且不為空
            if (!isset($request['account']) || empty($request['account'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $account = $request['account'];

            $ae = D('GameAe');

            $err = null;
            $res = $ae->loginMember(array(
                'account' => $account,
            ), $err);

            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('account', $account);

        $this->assign('method_name', 'loginMember');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
    //2. 取得遊戲連結
    public function game_link_guest(){
        if(!$this->power){exit();}
        $account = 'test';

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){

            $ae = D('GameAe');

            $err = null;
            $res = $ae->loginGuest(array(), $err);

            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('method_name', 'loginGuest');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }

    //3. 取得會員餘額
    public function balance(){
        if(!$this->power){exit();}
        $account = 'test';
        $password = 'abcd1234';

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){

            //檢查是否有 account 傳入 並且不為空
            if (!isset($request['account']) || empty($request['account'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $account = $request['account'];

            $ae = D('GameAe');

            $err = null;
            $res = $ae->getMemberBalance(array(
                'account' => $account,
            ), $err);
            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('account', $account);

        $this->assign('method_name', 'getMemberBalance');
        $this->assign('method_desc', '取得會員的當前餘額');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }

    //4. 上點
    public function deposit(){
        if(!$this->power){exit();}
        $account = 'test';
        $amount = 1;

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){

            //檢查是否有 account 傳入 並且不為空
            if (!isset($request['account']) || empty($request['account'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入帳號
            }
            $account = $request['account'];

            //檢查是否有 amount 傳入 並且不為空
            if (!isset($request['amount']) || empty($request['amount'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入帳號
            }
            $amount = $request['amount'];

            $err = null;
            $ae = D('GameAe');

            $res = $ae->rechargeMemberBalance(array(
                'account' => $account,
                'amount' => $amount,
            ), $err);

            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('method_name', 'rechargeMemberBalance');
        $this->assign('method_desc', '增加會員的點數餘額');
        $this->assign('account', $account);
        $this->assign('amount', $amount);
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }

    //5. 下點
    public function withdraw(){
        if(!$this->power){exit();}
        $account = 'test';
        $amount = 1;

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){

            //檢查是否有 account 傳入 並且不為空
            if (!isset($request['account']) || empty($request['account'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入帳號
            }
            $account = $request['account'];

            //檢查是否有 amount 傳入 並且不為空
            if (!isset($request['amount']) || empty($request['amount'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入帳號
            }
            $amount = $request['amount'];

            $err = null;
            $ae = D('GameAe');

            $res = $ae->withdrawMemberBalance(array(
                'account' => $account,
                'amount' => $amount,
            ), $err);

            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('method_name', 'withdrawMemberBalance');
        $this->assign('method_desc', '減少會員的點數餘額');
        $this->assign('account', $account);
        $this->assign('amount', $amount);
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }

    //6. 抓報表明細
    public function report(){
        if(!$this->power){exit();}
        $begin_datetime = date('Y-m-d H:00:00', time());
        $end_datetime = date('Y-m-d H:00:00', time()+60*60);

        $request = $this->getRequest();

        if (isset($request['go']) && (($request['go'])==1)){

            //檢查是否有 begin_datetime 傳入 並且不為空
            if (!isset($request['begin_datetime']) || empty($request['begin_datetime'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//開始時間為空，請重新輸入帳號
            }
            $begin_datetime = $request['begin_datetime'];

            //檢查是否有 end_datetime 傳入 並且不為空
            if (!isset($request['end_datetime']) || empty($request['end_datetime'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//結束時間為空，請重新輸入帳號
            }
            $end_datetime = $request['end_datetime'];

            //處理 account
            if (isset($request['account'])&&strlen($request['account'])) {
                $account = $request['account'];
            }

            $ae = D('GameAe');

            $err = null;
            $res = $ae->getGameRecord(array(
                'start_time' => $begin_datetime,
                'end_time' => $end_datetime,
            ), $err);

            if ($res === false) {
                $op_result = $err;
            } else {
                $op_result = $res;
            }
        }

        $this->assign('begin_datetime', $begin_datetime);
        $this->assign('end_datetime', $end_datetime);

        $this->assign('method_name', 'getGameRecord');
        $this->assign('method_desc', '抓取注單明細。');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
}