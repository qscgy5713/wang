<?php
//公用函數

/*
 *  過濾字串 
 */
function filterStr($data) {
    
    if (is_array($data)) {
        // 參數為陣列, 使用遞迴過濾內容
        foreach ($data as $key => $val) {
            $data[$key] = filterStr($val);
        }
    } else if (is_string($data)) {
        if (!is_json($data)) {
            // 非json字串, 進行特殊字元過濾
            // $data = mysql_escape_string(strip_tags(trim($data)));
            $data = htmlspecialchars($data);
            
            $data = dowith_sql($data);
            // $data = str_replace(" ", "&nbsp;", $data);
        } else {
            // json字串, decode後進行過濾
            $data_s = json_decode($data, true);
            if (is_array($data_s)) {
                // 參數為陣列, 使用遞迴過濾內容
                foreach ($data_s as $key => $val) {
                    $data_s[$key] = filterStr($val);
                }
            } else {
                // $data_s = mysql_escape_string(strip_tags(trim($data_s)));
                $data_s = trim(htmlspecialchars(trim($data_s)));
                
                $data_s = dowith_sql($data_s);
                // $data_s = str_replace(" ", "&nbsp;", $data_s);
            }
            $data = json_encode($data_s);
        }
    }
    
    return $data;
}
function dowith_php($str) {
    $str = str_ireplace("<?php","",$str);
    $str = str_ireplace("define(","",$str);
    $str = str_ireplace("require(","",$str);
    $str = str_ireplace("require ","",$str);
    $str = str_ireplace("include (","",$str);
    $str = str_ireplace("include ","",$str);
    $str = str_ireplace("curl_init ","",$str);
    $str = str_ireplace("curl_exec ","",$str);
    return $str;
}
function dowith_sql($str) {
    $str = str_ireplace(" and ","",$str);
    $str = str_ireplace(" execute ","",$str);
    $str = str_ireplace(" update ","",$str);
    $str = str_replace(" count ","",$str);
    $str = str_replace(" chr ","",$str);
    $str = str_replace(" mid ","",$str);
    $str = str_replace(" master ","",$str);
    $str = str_replace(" truncate ","",$str);
    $str = str_replace(" char ","",$str);
    $str = str_replace(" declare ","",$str);
    $str = str_ireplace("select ","",$str);
    $str = str_ireplace("create ","",$str);
    $str = str_ireplace("delete ","",$str);
    $str = str_ireplace("insert ","",$str);
    $str = str_ireplace(" or ","",$str);
    $str = str_ireplace("--","",$str);
    $str = str_ireplace("'","",$str);
    $str = str_ireplace(" = ","",$str);
    //echo $str;
    return $str;
}
function sql_change($str) {
    $str = str_ireplace("'","\'",$str);
    return $str;
}
/*
 * 判斷是否為json
 */
function is_json($string) {
    
    return is_array(json_decode($string, true));
}
/*
 * 取得用戶真實IP
 */
function getIp($type = 0){
    $type       =  $type ? 1 : 0;
    static $ip  =   NULL;
    if ($ip !== NULL) return $ip[$type];
    if($_SERVER['HTTP_X_REAL_IP']){//nginx 代理模式下，获取客户端真实IP
        $ip=$_SERVER['HTTP_X_REAL_IP'];
    }elseif (isset($_SERVER['HTTP_CLIENT_IP'])) {//客户端的ip
        $ip     =   $_SERVER['HTTP_CLIENT_IP'];
    }elseif (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) {//浏览当前页面的用户计算机的网关
        $arr    =   explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']);
        $pos    =   array_search('unknown',$arr);
        if(false !== $pos) unset($arr[$pos]);
        $ip     =   trim($arr[0]);
    }elseif (isset($_SERVER['REMOTE_ADDR'])) {
        $ip     =   $_SERVER['REMOTE_ADDR'];//浏览当前页面的用户计算机的ip地址
    }else{
        $ip=$_SERVER['REMOTE_ADDR'];
    }
    // IP地址合法验证
    $long = sprintf("%u",ip2long($ip));
    $ip   = $long ? array($ip, $long) : array('0.0.0.0', 0);
    return $ip[$type];
}
function get_os(){
    $oAgent = str_replace(';','|',$_SERVER['HTTP_USER_AGENT']);
    //$oAgent = $_SERVER['HTTP_USER_AGENT'];
    return $oAgent;
}

function get_url(){
    return $_SERVER['HTTP_HOST'];
}
/*
 * 驗證手機號碼
 */
function isPhone($str) {
    if (preg_match("/^09[0-9]{2}-[0-9]{3}-[0-9]{3}$/", $str)) {
        return true;    // 09xx-xxx-xxx
    } else if(preg_match("/^09[0-9]{2}-[0-9]{6}$/", $str)) {
        return true;    // 09xx-xxxxxx
    } else if(preg_match("/^09[0-9]{8}$/", $str)) {
        return true;    // 09xxxxxxxx
    } else {
        return false;
    }
}
/*
 * 取得IP 轉換 數字 格式
 */
function get_ip_inet_pton($ip){
    if(filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4)) {
        return sprintf('%u',ip2long($ip));
    } else if(filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6)) {
        return ip2long6($ip);
    } else {
        return '';
    }
}
/*
 * 取得IP 轉換  原始格式
 */
function get_ip_inet_ntop($ip){
    
    if(filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4)) {
        return long2ip($ip);
    } else if(filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6)) {
        return long2ip6($ip);
    } else {
        return '';
    }
    
    return inet_ntop($ip);
}
/*
 * array 轉成  json
 */
function array_to_json($sel_array){
    foreach($sel_array as $key => $value){
        if(is_string($key) || is_string($value)) {
            $new_array[urlencode($key)] = urlencode($value);
        }
    }
    return urldecode(json_encode($new_array));
}
/*
 * 檢查是否為數字 或是 數字字串
 */
function isNumber($str){
    return is_numeric($str);
}
/**
 * IPV6 地址转换为整数
 * @param $ipv6
 * @return string
 */
function ip2long6($ipv6)
{
    $ip_n = inet_pton($ipv6);
    $bits = 15; // 16 x 8 bit = 128bit
    $ipv6long = '';
    while ($bits >= 0) {
        $bin = sprintf("%08b", (ord($ip_n[$bits])));
        $ipv6long = $bin . $ipv6long;
        $bits--;
    }
    return gmp_strval(gmp_init($ipv6long, 2), 10);
}
/**
 * 整数转换为 IPV6 地址
 * @param $ipv6long
 * @return string
 */
function long2ip6($ipv6long)
{
    
    $bin = gmp_strval(gmp_init($ipv6long, 10), 2);
    if (strlen($bin) < 128) {
        $pad = 128 - strlen($bin);
        for ($i = 1; $i <= $pad; $i++) {
            $bin = "0" . $bin;
        }
    }
    $bits = 0;
    $ipv6 = '';
    while ($bits <= 7) {
        $bin_part = substr($bin, ($bits * 16), 16);
        $ipv6 .= dechex(bindec($bin_part)) . ":";
        $bits++;
    }
    // compress
    return inet_ntop(inet_pton(substr($ipv6, 0, -1)));
}