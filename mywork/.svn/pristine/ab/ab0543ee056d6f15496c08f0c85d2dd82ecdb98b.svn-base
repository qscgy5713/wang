<?php
/*
 * Ab歐博真人抓帳
 * 抓帳限制: 
 *     每次長度:
 *     每次間隔:
 *     最遠時間:
 */
class ScriptGameReportAbAction extends ScriptGameReportAction {
    
    protected function _initialize() {
        $this->gameCode = 'Ab';
        $request = $this->getRequest();
        if (isset($request['startTime']) && isset($request['endTime'])) {
            $this->startTime = $request['startTime'];
            $this->endTime = $request['endTime'];
        } else {  //沒給時的預設抓帳起始
            $nowTs = time();
            $this->startTime = date('Y-m-d H:i:s', $nowTs-(60*60*4-60*15));  //4小時~距今15分鐘前
            $this->endTime = date('Y-m-d H:i:s', $nowTs+60*15-1);  //現在+15分鐘後
        }
        //parent::setTime($this->startTime, $this->endTime);

        // 執行父類初始化
        parent::_initialize();
    }
    
    public function index() {
        if (!$this->power) {exit();}

        $GameReportData = D("GameReportData");
        $GameModel = D("Game".$this->gameCode);
        if (!method_exists($GameModel,'getGameRecord')) {
            //紀錄錯誤到Db
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'無此代號(Err000)</span>');
            $this->display();
            exit();
        }
        
        
        $this->getAbGameReportData($err);
        //抓前一天的
        //if ($this->startTime != date('Y-m-d', time()) && $this->endTime != date('Y-m-d', strtotime('+1 days'))) {
            //$this->setTime(date('Y-m-d', strtotime($this->endTime)),date('Y-m-d', strtotime('+1 days',strtotime($this->endTime))));//修改時間
            //$this->getAbGameReportData($err);
        //}

        //設定抓總結的起始時間
        $this->reportStartTime = $this->getBetDate($this->startTime).' 00:00:00';
        $this->reportEndTime = $this->getBetDate($this->endTime).' 23:59:59';
        
        /*$nowTs = time();
        if ($nowTs < strtotime(date('Y-m-d').' 12:00:00')) {  //未超過當日12點: 前日到當日
            $this->reportStartTime = date('Y-m-d', $nowTs-(60*60*24*2));
            $this->reportEndTime = date('Y-m-d', $nowTs-(60*60*24*1));
        } else {  //已超過當日12點: 當日到明日
            $this->reportStartTime = date('Y-m-d', $nowTs-(60*60*24*1));
            $this->reportEndTime = date('Y-m-d', $nowTs-(60*60*24*0));
        }*/

        $return = $this->getReportApi();
        if ($return === false) {
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err002) Err=>'.$this->err.'</span>');
            $this->display();
        }
        
        $this->assign("gameCode",$this->gameCode);//遊戲代號
        $this->assign("timeStr",$this->timeStr);//執行時間區間
        
        $this->assign("detailNumber",count($this->allDetailArray));//更新總注單
        $this->assign("allDetailArray",$this->allDetailArray);
        
        $this->assign("reportNumber",count($this->allReportArray));//更新總統整
        $this->assign("allReportArray",$this->allReportArray);
        
        $this->assign("status","<span style='color:Blue;'>".$this->gameCode.$this->success.'</span>');
        $this->display();
    }
    
    /*
     * 抓帳
     */
    protected function getAbGameReportData(&$err='') {
        $this->timeStr .= ((!empty($this->timeStr))? '<BR>' : '').$this->startTime.' ~ '.$this->endTime;
        
        $GameModel = D("Game".$this->gameCode);

        $round = 1;
        $arrRawBets = array();
        $isContinue = true;
        $beginDatetime2 = date('Y-m-d H:00:00',strtotime($this->startTime));
        $beginDatetime3 = date('Y-m-d H:i:s',strtotime($beginDatetime2)+60*60*6-1);  //每次抓1小時區間
        do {
            $err = null;
            $arrParams = array(
                'begin_datetime' => $beginDatetime2,
                'end_datetime' => $beginDatetime3,
            );
            //var_dump($arrParams);
            $arrThisRoundBets = $GameModel->getGameRecord($arrParams, $err);
            if ($arrThisRoundBets === false) {
                //紀錄錯誤到Db
                $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err001) Err=>'.$err.'</span>');
                $this->display();
                $isContinue = false;
                exit();
            }

            if (sizeof($arrThisRoundBets)) {
                $arrRawBets = array_merge($arrRawBets, $arrThisRoundBets);
            }

            if (strtotime($beginDatetime3) >= strtotime($this->endTime)) {
                $isContinue = false;
            }
            $beginDatetime2 = date('Y-m-d H:i:s',strtotime($beginDatetime2)+60*60*6);  //推進
            $beginDatetime3 = date('Y-m-d H:i:s',strtotime($beginDatetime2)+60*60*6);  //推進
            ++$round;
        } while ( $isContinue );

        //self::_preprocessBets($arrRawBets);  //處理注單明細格式

        foreach ($arrRawBets as $bk => $bv) {
            //把遊戲帳號 加入 搜尋會員帳號陣列 Start
            if (!in_array($bv['client'], $this->allMemberGameAccount)) {
                array_push($this->allMemberGameAccount, $bv['client']);
            }
            //把遊戲帳號 加入 搜尋會員帳號陣列 End

            //依照下注遊戲判斷是否需要返水
            $detail_needBackWater = 0;
            $arrBaccaratGameTypes = array(
                101 => '普通百家樂',
                102 => 'VIP百家樂',
                103 => '快速百家樂',
                104 => '竟咪百家樂',
                //201 => '骰寶',
                //301 => '龍虎',
                //401 => '輪盤',
                501 => '歐洲廳百家樂',
                //601 => '歐洲廳輪盤',
                //701 => '歐洲廳21點',
                106 => '聚寶百家樂',
                //801 => '牛牛',
                //901 => '炸金花',
            );
            if ( array_key_exists($bv['gameType'], $arrBaccaratGameTypes) ) {  //屬於百家樂
                if ($betType == 1001) {  //押 '莊''
                    if ($commission == 100) {  //且非免佣. 100=非免佣, 101=免佣
                        $detail_needBackWater = 1;
                    }
                } else {  //不是押 '莊''
                    $detail_needBackWater = 1;
                }
            }

            $arr = array(
                'gameRoundId' => $bv['gameRoundId'],
                //'gameType' => $gameType,
                //'betTime' => $create_time,
                'state' => $bv['state'],
                'currency' => $bv['currency'],
                'exchangeRate' => $bv['exchangeRate'],
                'betType' => $bv['betType'],
                'gameResult' => $bv['gameResult'],
                'tableName' => $bv['tableName'],
                'commission' => $bv['commission'],
                'appType' => $bv['appType'],
            );
            foreach ($arr as $ak => $av){
                $arr[$ak] = dowith_sql($av);
            }

            $arrInJson = json_encode($arr, JSON_UNESCAPED_UNICODE);

            $data = array(
                "detail_id" => $bv['betNum'],
                "detail_gameAccount" => $bv['client'],
                "detail_createTime" => strtotime($bv['betTime']),
                "detail_bettingMoney" => $bv['betAmount'],
                "detail_surplus" => $bv['winOrLoss'],
                "detail_effective" => $bv['validAmount'],
                "detail_needBackWater"=> $detail_needBackWater,
                "detail_isBackWater" => 0,
                "detail_dataInJson" => $arrInJson,  //json_encode($dataInJson, JSON_UNESCAPED_UNICODE),
                "detail_subbetInJson" => null,
                "detail_gameType" => $bv['gameType'],
            );
            $data["detail_orderDate"] = strtotime($this->getBetDate($bv['betTime']).' 12:00:00');
            array_push($this->allDetailArray, $data);
        }
    }

    //-----------------------------------------------
    //找出一個時間的歸帳日
    public static function getBetDate($argTime) {
        if (date('Y-m-d',strtotime($argTime))==$argTime) {
            return $argTime;
        }
        $splitTimeS = '12:00:00';  //區分不同歸帳日的時間點
        $orderDate = null;
        if (is_int($argTime)&&($argTime >= strtotime('1970-01-01 00:00:00'))) {  //傳入timestamp
            $dateTime = $argTime;
        } else {  //傳入日期時間字串
            $dateTime = strtotime($argTime);
        }
        $splitDatetime = date("Y-m-d {$splitTimeS}", $dateTime);
        $splitTime = strtotime($splitDatetime);

        if ($dateTime >= $splitTime) {  //若已經跨越區分不同歸帳日的時間點-->當日
            $orderDate = date("Y-m-d", $splitTime);
        } else {  //未跨越-->前一日
            $orderDate = date("Y-m-d", $splitTime-60*60*24*1);
        }
        //echo "getBetDate({$argTime})={$orderDate}<br/>";
        return $orderDate;
    }  //--function getBetDate

    //-----------------------------------------------
    //把原始API抓回的注單格式處理轉換為我們的格式
    protected function _preprocessBets(&$argBets) {
        if ($argBets&&is_array($argBets)) {
            foreach ($argBets as &$bet) {
                //...
            }
        }
    }  //--function _preprocessBets
}