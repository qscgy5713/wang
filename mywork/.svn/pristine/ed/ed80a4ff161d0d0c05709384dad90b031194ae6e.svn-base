<?php
/*
 * Qt電子抓帳
 * 抓帳限制: 
 *     每次長度:
 *     每次間隔:
 *     最遠時間:
 */

set_time_limit ( 300 );
class ScriptGameReportQtAction extends ScriptGameReportAction {

    protected function _initialize() {
        $this->gameCode = 'Qt';
        $request = $this->getRequest();
        if (isset($request['startTime']) && isset($request['endTime'])) {
            $this->startTime = $request['startTime'];
            $this->endTime = $request['endTime'];
        } else {  //沒給時的預設抓帳起始
            $nowTs = time();
            $this->startTime = date('Y-m-d H:i:s', strtotime('-2 hour'));
            $this->endTime = date('Y-m-d H:i:s', strtotime('+15 minute'));
        }
        //parent::setTime($this->startTime, $this->endTime);

        // 執行父類初始化
        parent::_initialize();
    }
    
    public function index() {
        if (!$this->power) {exit();}

        $GameReportData = D("GameReportData");
        $GameModel = D("Game".$this->gameCode);
        if (!method_exists($GameModel,'getGameRecord')) {
            //紀錄錯誤到Db
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'無此代號(Err000)</span>');
            $this->display();
            exit();
        }

        $this->detailId = 'id';
        $this->gameAccount = 'playerId';
        $this->createTime = 'initiated';
        $this->bettingMoney = 'totalBet';
        //$this->surplus = 'win';  //沒有能直接符合這定義這欄位
        //$this->effective = 'validbet';

        $this->getQtGameReportData($err);

        //設定抓總結的起始時間
        $this->reportStartTime = $this->getBetDate($this->startTime).' 00:00:00';
        $this->reportEndTime = $this->getBetDate($this->endTime).' 23:59:59';

        $return = $this->getReportApi();
        if ($return === false) {
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err002) Err=>'.$this->err.'</span>');
            $this->display();
        }
        
        $this->assign("gameCode",$this->gameCode);//遊戲代號
        $this->assign("timeStr",$this->timeStr);//執行時間區間
        
        $this->assign("detailNumber",count($this->allDetailArray));//更新總注單
        $this->assign("allDetailArray",$this->allDetailArray);
        
        $this->assign("reportNumber",count($this->allReportArray));//更新總統整
        $this->assign("allReportArray",$this->allReportArray);
        
        $this->assign("status","<span style='color:Blue;'>".$this->gameCode.$this->success.'</span>');
        $this->display();
    }
    
    /*
     * 抓帳
     */
    protected function getQtGameReportData(&$err='') {
        $this->timeStr .= ((!empty($this->timeStr))? '<BR>' : '').$this->startTime.' ~ '.$this->endTime;
        
        $GameModel = D("Game".$this->gameCode);

        $arrRawBets = array();
        $isContinue = true;
        $beginDatetime = date('Y-m-d H:i:s',strtotime($this->startTime));
        $endDatetime = date('Y-m-d H:i:s',strtotime($this->endTime));
        do {  //日期 loop
            $page = 0;
            $hasMore = true;
            do {  //page loop
                $err = null;
                $arrData = array(
                    'begin_datetime' => $beginDatetime,
                    'end_datetime' => $endDatetime,
                    'page' => $page,
                );
                //var_dump($arrData);
                $arrThisRoundBets = $GameModel->getGameRecord($arrData, $err);
                //var_dump($arrThisRoundBets);
                if ((!is_array($arrThisRoundBets))||($arrThisRoundBets === false)) {
                    //紀錄錯誤到Db
                    $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err001) Err=>'.$err.'</span>');
                    $this->display();
                    $isContinue = false;
                    $hasMore = false;
                    exit();
                }
                $numData = sizeof($arrThisRoundBets);

                if ($numData) {
                    $arrRawBets = array_merge($arrRawBets, $arrThisRoundBets);
                    if ( $numData < GameQtModel::QT_REPORT_GAMEROUND_RETRIEVE_MAX_NUM ) {  //不足滿額
                        $hasMore = false;
                    }
                } else {
                    $hasMore = false;
                }

                ++$page;
            } while ($hasMore);

            if (strtotime($endDatetime) >= strtotime($this->endTime)) {
                $isContinue = false;
            } else {
                $beginDatetime = date('Y-m-d H:i:s',strtotime($beginDatetime)+60*60*8);  //推進24小時
                $endDatetime = date('Y-m-d H:i:s',strtotime($endDatetime)+60*60*8);  //推進24小時
            }
        } while ( $isContinue );

        foreach ($arrRawBets as $bk => $bv) {
            //把遊戲帳號 加入 搜尋會員帳號陣列 Start
            if (!in_array($bv[$this->gameAccount], $this->allMemberGameAccount)) {
                array_push($this->allMemberGameAccount, $bv[$this->gameAccount]);
            }
            //把遊戲帳號 加入 搜尋會員帳號陣列 End

            //$bv['game_name'] = $glb_MysqliConn->real_escape_string($bv['game_name']);  //暫不實施
            if (isset($bv['completed'])) {
                $completed = $bv['completed'];
                $arrCompleteTime = explode('[',$completed);
                $bv['completed'] = date('Y-m-d H:i:s', strtotime($arrCompleteTime[0]));  //結束時間(派彩?)
            }
            $initiated = $bv['initiated'];
            $arrBetTime = explode('[',$initiated);
            $bv['initiated'] = date('Y-m-d H:i:s', strtotime($arrBetTime[0]));  //下注時間

            $dataInJson = array();
            foreach ($bv as $subKey => $subValue){
                $dataInJson[$subKey] = dowith_sql($subValue);
            }

            $detail_needBackWater = 1;  //QT電子需要返水
            $surplus = ($bv['totalPayout']-$bv[$this->bettingMoney]);  //計算輸贏
 
            $initiatedDatetime = $bv['initiated'];
            if (isset($bv['completed'])) {
                $completedDatetime = $bv['completed'];
                $orderDate = $this->getBetDate($completedDatetime);  //根據官方說法, NGR報表是以完成時間為歸帳日
            } else {
                $orderDate = $this->getBetDate($initiatedDatetime);  //如果還沒完成先用下注時間作為歸帳日
            }
            $data = array(
                "detail_id" => $bv[$this->detailId],
                "detail_gameAccount" => $bv[$this->gameAccount],
                "detail_createTime" => strtotime($bv[$this->createTime]),
                "detail_bettingMoney" => $bv[$this->bettingMoney],
                "detail_surplus" => $surplus,
                "detail_effective" => $bv[$this->bettingMoney],
                "detail_needBackWater"=> $detail_needBackWater,
                "detail_isBackWater" => 0,
                "detail_dataInJson" => json_encode($dataInJson, JSON_UNESCAPED_UNICODE),
                "detail_subbetInJson" => null,
            );
            $data["detail_orderDate"] = strtotime($orderDate.' 12:00:00');
            array_push($this->allDetailArray, $data);
        }
    }

    //-----------------------------------------------
    //找出一個時間的歸帳日
    public static function getBetDate($argTime) {
        if (date('Y-m-d',strtotime($argTime))==$argTime) {
            return $argTime;
        }
        $splitTimeS = '00:00:00';  //區分不同歸帳日的時間點
        $orderDate = null;
        if (is_int($argTime)&&($argTime >= strtotime('1970-01-01 00:00:00'))) {  //傳入timestamp
            $dateTime = $argTime;
        } else {  //傳入日期時間字串
            $dateTime = strtotime($argTime);
        }
        $splitDatetime = date("Y-m-d {$splitTimeS}", $dateTime);
        $splitTime = strtotime($splitDatetime);

        if ($dateTime >= $splitTime) {  //若已經跨越區分不同歸帳日的時間點-->當日
            $orderDate = date("Y-m-d", $splitTime);
        } else {  //未跨越-->前一日
            $orderDate = date("Y-m-d", $splitTime-60*60*24*1);
        }
        //echo "getBetDate({$argTime})={$orderDate}<br/>";
        return $orderDate;
    }  //--function getBetDate

}