<?php
class GameASGAction extends MemberAction {
  const API_NAME = 'ASG 亞洲之星棋牌';
  protected $power = false;
  protected $gameName = "Asg";
  /*
   * 如果有初始化 可以設定在初始化中
   */
  protected function _initialize() {
    parent::_initialize();
    
    $request = $this->getRequest();
    if(isset($request["MIS"]) && $request["MIS"]==="@@aaa123"){
        cookie('MIS','@@aaa123','expire=3600');
    }
    $MIS = cookie('MIS');
    if($MIS === "@@aaa123"){
        $this->power = true;
        $request = $this->getRequest();
        $function_links = '';
        $function_links .= "<a href=\"__URL__/index\" target=\"_self\">創新帳號</a> | ";
        $function_links .= "<a href=\"__URL__/game_link\" target=\"_self\">遊戲連結</a> | ";
        $function_links .= "<a href=\"__URL__/deposit\" target=\"_self\">上點</a> | ";
        $function_links .= "<a href=\"__URL__/withdraw\" target=\"_self\">下點</a> | ";
        $function_links .= "<a href=\"__URL__/balance\" target=\"_self\">查點</a> | ";
        $function_links .= "<a href=\"__URL__/report\" target=\"_self\">報表</a> | ";
        $function_links .= "<a href=\"__URL__/get_api_url\" target=\"_self\">getApiUrl</a> | ";
        $this->assign('function_links', $function_links);
        
        $this->assign('api_name', self::API_NAME);
        $this->assign('op_desc', '輸入參數按下送出');
    }
  }
  
  public function gameEnter(){
      $this->isMemberLoginShowErr();
      $this->assign('gameName','亞洲之星棋牌');
      //取得 遊戲連結 開始
      $data = array(
          "game_name" => $this->gameName
      );
      $return = $this->loginMember($data,$err);
      if($return === false){
          $this->assign('gameLink', "false");
          $this->assign('errMessage', $err);
          $this->display();
          return false;
      }
      $gameLink = $return;
      //取得 遊戲連結 結束
      $memberWallet = $_SESSION['Member']['money'];
      if($memberWallet != 0){
          $data = array(
              "transferMoney" => $memberWallet,
              "gameName" => $this->gameName
          );
          $return = $this->walletTransferGameBalance($data,$err);
          if($return === false){
              $this->assign('gameLink', "false");
              $this->assign('errMessage', $err);
              $this->display();
              return false;
          }
          $this->getMemberWalletMoney();//讀取電子錢包
      } else {
          cookie('member_newMember',null);//清除不讀轉移表的cookie
      }
      
      $this->addLastGameData();//成功進入遊戲 加入最後一館陣列中
      
      $this->assign('gameLink', $gameLink);//遊戲連結
      $this->display();
  }

  //1. 創新帳號
  public function index(){
    if(!$this->power){exit();}

    $account = 'astest001';

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 account 傳入 並且不為空
      if(!isset($request['account']) || empty($request['account'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_05')));//帳號為空，請重新輸入
      }
      $account = $request['account'];

      $asg = D('GameAsg');

      $err = null;
      $res = $asg->createMember(array(
        'account' => $account,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'createMember');
    $this->assign('method_desc', '建立一個新的遊戲帳號。除了帳號名稱以外，其他欄位基本都是廢值。');
    $this->assign('account', $account);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //2. 取得遊戲連結
  public function game_link(){
    if(!$this->power){exit();}
    $account = 'astest001';

    $request = $this->getRequest();

    //var_dump($request);

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 account 傳入 並且不為空
      if(!isset($request['account']) || empty($request['account'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $account = $request['account'];

      $asg = D('GameAsg');

      $err = null;
      $res = $asg->loginMember(array(
        'account' => $account,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $asg->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'loginMember');
    $this->assign('method_desc', '用現存遊戲帳號取得遊戲的連結');
    $this->assign('account', $account);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //3. 取得會員餘額
  public function balance(){
    if(!$this->power){exit();}
    $account = 'astest001';

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 account 傳入 並且不為空
      if(!isset($request['account']) || empty($request['account'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $account = $request['account'];

      $asg = D('GameAsg');

      $err = null;
      $res = $asg->getMemberBalance(array(
        'account' => $account,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $asg->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('serverIp', getServerIp());
    $this->assign('method_name', 'getMemberBalance');
    $this->assign('method_desc', '取得會員的當前餘額');
    $this->assign('account', $account);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //4. 上點
  public function deposit(){
    if(!$this->power){exit();}
    $account = 'astest001';
    $amount = 1;

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 account 傳入 並且不為空
      if(!isset($request['account']) || empty($request['account'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $account = $request['account'];

      //檢查是否有 amount 傳入 並且不為空
      if(!isset($request['amount']) || empty($request['amount'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入
      }
      $amount = $request['amount'];

      $err = null;
      $asg = D('GameAsg');

      $res = $asg->rechargeMemberBalance(array(
        'account' => $account,
        'amount' => $amount,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $asg->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'rechargeMemberBalance');
    $this->assign('method_desc', '增加會員的點數餘額');
    $this->assign('account', $account);
    $this->assign('amount', $amount);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //5. 下點
  public function withdraw(){
    if(!$this->power){exit();}
    $account = 'astest001';
    $amount = 1;

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 account 傳入 並且不為空
      if(!isset($request['account']) || empty($request['account'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $account = $request['account'];

      //檢查是否有 amount 傳入 並且不為空
      if(!isset($request['amount']) || empty($request['amount'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入
      }
      $amount = $request['amount'];

      $err = null;
      $asg = D('GameAsg');

      $res = $asg->withdrawMemberBalance(array(
        'account' => $account,
        'amount' => $amount,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $asg->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'withdrawMemberBalance');
    $this->assign('method_desc', '減少會員的點數餘額');
    $this->assign('account', $account);
    $this->assign('amount', $amount);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //6. 抓報表明細
  public function report(){
    if(!$this->power){exit();}
    $endTime = date('Y-m-d H:i:00');
    $endTs = strtotime($endTime);
    $startTime = date('Y-m-d H:i:s', $endTs-(60*60*6));

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      $asg = D('GameAsg');

      $arrDatas = array();

      //處理 begin_datetime
      if(isset($request['startTime']) && strlen($request['startTime'])){
          $startTime = $request['startTime'];
      } else {
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//begin_datetime 為空，請重新輸入
      }

      //處理 end_datetime
      if(isset($request['endTime']) && strlen($request['endTime'])){
          $endTime = $request['endTime'];
      } else {
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//end_datetime 為空，請重新輸入
      }

      $err = null;
      $res = $asg->getGameRecord(array(
        'startTime' => $startTime,
        'endTime' => $endTime,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $asg->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getGameRecord');
    $this->assign('method_desc', '抓取注單明細, 開始與結束時間相距不能超過6小時。最遠能查詢一個月內資料。');
    $this->assign('startTime', $startTime);
    $this->assign('endTime', $endTime);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //7. getApiUrl
  public function get_api_url(){
    if(!$this->power){exit();}
    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      $asg = D('GameAsg');

      $err = null;
      $res = $asg->getApiUrl($err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $asg->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getApiUrl');
    $this->assign('method_desc', '取得執行API請求所需的URL。');
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

}