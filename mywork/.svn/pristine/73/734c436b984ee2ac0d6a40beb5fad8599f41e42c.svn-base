<?php
/*
 * Sa沙龍真人抓帳
 * 抓帳限制: 
 *     每次長度:
 *     每次間隔:
 *     最遠時間:
 */
class ScriptGameReportSaAction extends ScriptGameReportAction {
    
    protected function _initialize() {
        $this->gameCode = 'Sa';
        $request = $this->getRequest();
        if (isset($request['startTime']) && isset($request['endTime'])) {
            $this->startTime = $request['startTime'];
            $this->endTime = $request['endTime'];
            if(strtotime($this->endTime) > (strtotime($this->startTime)+(60*60*24))){
                $this->nextStartTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*24));
                $this->nextEndTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*(24+24)));
                
                $this->allStartTime = $this->startTime;
                $this->allEndTime = $this->endTime;
                
                $this->endTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*24));
            }
        } else {  //沒給時的預設抓帳起始
            $nowTs = time();
            $this->startTime = date('Y-m-d H:i:s', $nowTs-(60*60*6-60*15));  //6小時~距今15分鐘前
            $this->endTime = date('Y-m-d H:i:s', $nowTs+60*15-1);  //現在+15分鐘後
        }
        
        if(isset($request['allStartTime']) && isset($request['allEndTime'])){
            $this->allStartTime = $request['allStartTime'];
            $this->allEndTime = $request['allEndTime'];
            
            if(strtotime($this->endTime) >= strtotime($this->allEndTime)){
                $this->allStartTime = '';
                $this->allEndTime = '';
                
                $this->allStartTime = '';
                $this->allEndTime = '';
            } else {
                $this->nextStartTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*24));
                $this->nextEndTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*(24+24)));
            }
        }

        // 執行父類初始化
        parent::_initialize();
    }
    
    public function index() {
        if (!$this->power) {exit();}

        $GameReportData = D("GameReportData");
        $GameModel = D("Game".$this->gameCode);
        if (!method_exists($GameModel,'getGameRecord')) {
            //紀錄錯誤到Db
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'無此代號(Err000)</span>');
            $this->display();
            exit();
        }

        $this->getSaGameReportData($err);
        //抓前一天的
        //if ($this->startTime != date('Y-m-d', time()) && $this->endTime != date('Y-m-d', strtotime('+1 days'))) {
            //$this->setTime(date('Y-m-d', strtotime($this->endTime)),date('Y-m-d', strtotime('+1 days',strtotime($this->endTime))));//修改時間
            //$this->getSaGameReportData($err);
        //}

        //設定抓總結的起始時間
        $this->reportStartTime = $this->getBetDate($this->startTime).' 00:00:00';
        $this->reportEndTime = $this->getBetDate($this->endTime).' 23:59:59';

        /*$nowTs = time();
        if ($nowTs < strtotime(date('Y-m-d').' 12:00:00')) {  //未超過當日12點: 前日到當日
            $this->reportStartTime = date('Y-m-d', $nowTs-(60*60*24*2));
            $this->reportEndTime = date('Y-m-d', $nowTs-(60*60*24*1));
        } else {  //已超過當日12點: 當日到明日
            $this->reportStartTime = date('Y-m-d', $nowTs-(60*60*24*1));
            $this->reportEndTime = date('Y-m-d', $nowTs-(60*60*24*0));
        }*/

        /*
        $this->delOrderDateArray = array(
            strtotime('2019-06-17 12:00:00'),
            strtotime('2019-06-18 12:00:00'),
            strtotime('2019-06-19 12:00:00'),
        );
        */

        $return = $this->getReportApi();
        if ($return === false) {
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err002) Err=>'.$this->err.'</span>');
            $this->display();
        }
        
        $this->assign("gameCode",$this->gameCode);//遊戲代號
        $this->assign("timeStr",$this->timeStr);//執行時間區間
        
        $this->assign("detailNumber",count($this->allDetailArray));//更新總注單
        $this->assign("allDetailArray",$this->allDetailArray);
        
        $this->assign("reportNumber",count($this->allReportArray));//更新總統整
        $this->assign("allReportArray",$this->allReportArray);
        
        $this->assign("status","<span style='color:Blue;'>".$this->gameCode.$this->success.'</span>');
        $this->display();
    }
    
    /*
     * 抓帳
     */
    protected function getSaGameReportData(&$err='') {
        $this->timeStr .= ((!empty($this->timeStr))? '<BR>' : '').$this->startTime.' ~ '.$this->endTime;
        
        $GameModel = D("Game".$this->gameCode);

        //var_dump($this->startTime);
        //var_dump($this->endTime);

        $round = 1;
        $arrRawBets = array();
        $isContinue = true;
        $beginDatetime2 = date('Y-m-d H:i:s',strtotime($this->startTime));
        $beginDatetime3 = date('Y-m-d H:i:s',strtotime($beginDatetime2)+60*60*6-1);  //每次抓6小時區間
        do {
            $err = null;
            $arrParams = array(
                'begin_datetime' => $beginDatetime2,
                'end_datetime' => $beginDatetime3,
            );

            $arrThisRoundBets = $GameModel->getGameRecord($arrParams, $err)['BetDetail'];
            if ($arrThisRoundBets === false) {
                //紀錄錯誤到Db
                $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err001) Err=>'.$err.'</span>');
                $this->display();
                $isContinue = false;
                exit();
            }

            if (sizeof($arrThisRoundBets)) {
                $arrRawBets = array_merge($arrRawBets, $arrThisRoundBets);
            }
            if (strtotime($beginDatetime3) >= strtotime($this->endTime)) {
                $isContinue = false;
            }

            $beginDatetime2 = date('Y-m-d H:i:s',strtotime($beginDatetime2)+60*60*6);  //推進
            $beginDatetime3 = date('Y-m-d H:i:s',strtotime($beginDatetime2)+60*60*6);  //推進
            ++$round;
        } while ( $isContinue );

        self::_preprocessBets($arrRawBets);  //處理注單明細格式

        foreach ($arrRawBets as $bk => $bv) {
            //把遊戲帳號 加入 搜尋會員帳號陣列 Start
            if (!in_array($bv['Username'], $this->allMemberGameAccount)) {
                array_push($this->allMemberGameAccount, $bv['Username']);
            }
            //把遊戲帳號 加入 搜尋會員帳號陣列 End

            //依照下注遊戲判斷是否需要返水
            $detail_needBackWater = 0;
            $gameTypeStr = GameSaModel::getGameNameByCode($bv['GameType']);
            if ( strpos($gameTypeStr, '百家樂') !== false ) {
                $detail_needBackWater = 1;
            }

            $arr = array(
                //'BetID' => $BetID,
                //'Username' => $game_account,
                'BetType' => $bv['BetType'],
                'PayoutTime' => $bv['PayoutTime'],
                //'GameType' => $GameType,
                //'BetAmount' => floatVal($BetAmount),
                //'Rolling' => floatVal($Rolling),
                //'ResultAmount' => floatVal($ResultAmount),
                'HostID' => $bv['HostID'],
                'GameID' => $bv['GameID'],
                'Round' => $bv['Round'],
                'Set' => $bv['Set'],
                'BetSource' => $bv['BetSource'],
                'State' => $bv['State'],
                'Detail' => $bv['Detail'],
            );
            foreach ($arr as $ak => $av){
                $arr[$ak] = dowith_sql($av);
            }
            $arrInJson = json_encode($arr, JSON_UNESCAPED_UNICODE);

            $data = array(
                "detail_id" => $bv['BetID'],
                "detail_gameAccount" => $bv['Username'],
                "detail_createTime" => strtotime($bv['BetTime']),
                "detail_bettingMoney" => $bv['BetAmount'],
                "detail_surplus" => $bv['ResultAmount'],
                "detail_effective" => $bv['Rolling'],
                "detail_needBackWater"=> $detail_needBackWater,
                "detail_isBackWater" => 0,
                "detail_dataInJson" => $arrInJson,  //json_encode($dataInJson, JSON_UNESCAPED_UNICODE),
                "detail_subbetInJson" => null,
                "detail_gameType" => $bv['GameType'],
            );
            $data["detail_orderDate"] = strtotime($this->getBetDate($bv['BetTime']).' 12:00:00');
            array_push($this->allDetailArray, $data);
        }
        //var_dump($this->allDetailArray);
    }

    //-----------------------------------------------
    //找出一個時間的歸帳日
    public static function getBetDate($argTime) {
        if (date('Y-m-d',strtotime($argTime))==$argTime) {
            return $argTime;
        }
        $splitTimeS = '12:00:00';  //區分不同歸帳日的時間點
        $orderDate = null;
        if (is_int($argTime)&&($argTime >= strtotime('1970-01-01 00:00:00'))) {  //傳入timestamp
            $dateTime = $argTime;
        } else {  //傳入日期時間字串
            $dateTime = strtotime($argTime);
        }
        $splitDatetime = date("Y-m-d {$splitTimeS}", $dateTime);
        $splitTime = strtotime($splitDatetime);

        if ($dateTime >= $splitTime) {  //若已經跨越區分不同歸帳日的時間點-->當日
            $orderDate = date("Y-m-d", $splitTime);
        } else {  //未跨越-->前一日
            $orderDate = date("Y-m-d", $splitTime-60*60*24*1);
        }
        //echo "getBetDate({$argTime})={$orderDate}<br/>";
        return $orderDate;
    }  //--function getBetDate

    //-----------------------------------------------
    //把原始API抓回的注單格式處理轉換為我們的格式
    protected function _preprocessBets(&$argBets) {
        if ($argBets&&is_array($argBets)) {
            foreach ($argBets as &$bVal) {
                $bVal['BetAmount'] = floatVal($bVal['BetAmount']);
                $bVal['ResultAmount'] = floatVal($bVal['ResultAmount']);
                $bVal['State'] = ($bVal['State'] == 'true');

                $BetAmount = floatVal($bVal['BetAmount']);
                $ResultAmount = floatVal($bVal['ResultAmount']);
                //$GameType = $bVal['GameType'];
                //$State = $bVal['State'];
                if ($bVal['State']) {
                    if ($bVal['GameType']=='ftan') {
                        if ($ResultAmount > 0.0) {  //贏: 翻攤在贏的時候,投注額=投注額*0.95
                            $bVal['BetAmount'] = $bVal['BetAmount'] * 0.95;
                        }
                    }
                }
            }
        }
    }  //--function _preprocessBets
}