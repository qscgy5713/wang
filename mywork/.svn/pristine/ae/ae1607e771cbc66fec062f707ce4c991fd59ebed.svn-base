<?php
/*
 * Asg抓帳
 */
class ScriptGameReportAsgAction extends ScriptGameReportAction {
    
    protected function _initialize() {
        $this->gameCode = 'Asg';
        $request = $this->getRequest();
        if(isset($request['startTime']) && isset($request['endTime'])){
            $this->startTime = $request['startTime'];
            $this->endTime = $request['endTime'];
            if(strtotime($this->endTime) > (strtotime($this->startTime)+(60*60*6))){
                $this->nextStartTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*6));
                $this->nextEndTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*12));
                
                $this->allStartTime = $this->startTime;
                $this->allEndTime = $this->endTime;
                
                $this->endTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*6));
            }
        } else {
            $this->endTime = date('Y-m-d H:i:00');
            $endTs = strtotime($this->endTime);
            $this->startTime = date('Y-m-d H:i:s', $endTs-(60*60*6));
        }
        
        if(isset($request['allStartTime']) && isset($request['allEndTime'])){
            $this->allStartTime = $request['allStartTime'];
            $this->allEndTime = $request['allEndTime'];
            
            if(strtotime($this->endTime) >= strtotime($this->allEndTime)){
                $this->allStartTime = '';
                $this->allEndTime = '';
                
                $this->allStartTime = '';
                $this->allEndTime = '';
            } else {
                $this->nextStartTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*6));
                $this->nextEndTime = date('Y-m-d H:i:s',strtotime($this->startTime)+(60*60*12));
            }
        }
        // 執行父類初始化
        parent::_initialize();
    }
    
    public function index(){
        if(!$this->power){exit();}
        
        $GameReportData = D("GameReportData");
        $GameModel = D("Game".$this->gameCode);
        if(!method_exists($GameModel,'getGameRecord')){
            //紀錄錯誤到Db
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'無此代號(Err000)</span>');
            $this->display();
            exit();
        }
        
        $this->detailId = 'recordID';
        $this->gameAccount = 'userAccount';
        $this->createTime = 'createTime';
        $this->bettingMoney = 'betTotal';
        $this->surplus = 'resultTotal';
        $this->effective = 'betTotal';
        $this->getAsgGameReportData($err);
        
        $return = $this->getReportApi();
        if($return === false){
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err002) Err=>'.$this->err.'</span>');
            $this->display();
        }
        
        $this->assign("gameCode",$this->gameCode);//遊戲代號
        $this->assign("timeStr",$this->timeStr);//執行時間區間
        
        $this->assign("detailNumber",count($this->allDetailArray));//更新總注單
        $this->assign("allDetailArray",$this->allDetailArray);
        
        $this->assign("reportNumber",count($this->allReportArray));//更新總統整
        $this->assign("allReportArray",$this->allReportArray);
        
        $this->assign("status","<span style='color:Blue;'>".$this->gameCode.$this->success.'</span>');
        $this->display();
    }
    
    /*
     * ASG 抓帳
     */
    protected function getAsgGameReportData(&$err=''){
        $this->timeStr .= ((!empty($this->timeStr))? '<BR>' : '').$this->startTime.' ~ '.$this->endTime;
        
        $GameModel = D("Game".$this->gameCode);
        $data = array(
            'startTime' => $this->startTime,
            'endTime' => $this->endTime,
        );
        $return = $GameModel->getGameRecord($data,$err);
        if($return === false){
            //紀錄錯誤到Db
            $this->assign("status","<span style='color:red;'>".$this->gameCode.'抓帳發生錯誤(Err001) Err=>'.$err.'</span>');
            $this->display();
            exit();
        }
        //var_dump($return);
        $GameStrArray = array();
        foreach($return as $key => $value){
            //把遊戲帳號 加入 搜尋會員帳號陣列 Start
            if(!in_array($value[$this->gameAccount], $this->allMemberGameAccount)){
                array_push($this->allMemberGameAccount, $value[$this->gameAccount]);
            }
            //把遊戲帳號 加入 搜尋會員帳號陣列 End

            $dataInJson = array();
            foreach ($value as $subKey => $subValue){
                $dataInJson[$subKey] = dowith_sql($subValue);
            }
            
            //把遊戲帳號 加入 搜尋會員帳號陣列 End
            $data = array(
                "detail_id" => $value[$this->detailId].';'.$value['period'],
                "detail_gameAccount" => $value[$this->gameAccount],
                "detail_createTime" => strtotime($value[$this->createTime]),
                "detail_orderDate" => strtotime(date('Y-m-d 12:00:00', strtotime($value[$this->createTime]))),
                "detail_bettingMoney" => $value[$this->bettingMoney],
                "detail_surplus" => $value[$this->surplus],
                "detail_effective" => $value[$this->effective],
                "detail_needBackWater"=> 0,
                "detail_isBackWater" => 0,
                "detail_dataInJson" =>json_encode($dataInJson, JSON_UNESCAPED_UNICODE),
            );
            array_push($this->allDetailArray, $data);
        }
    }
}