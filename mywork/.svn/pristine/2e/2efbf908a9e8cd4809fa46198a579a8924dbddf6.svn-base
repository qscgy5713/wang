<?php

require('AsCipher.class.php');

class GameAsAction extends CommonAction {
  const API_NAME = 'AS 亞洲之星棋牌';
  protected $power = false;
  protected $gameName = "As";
  /*
   * 如果有初始化 可以設定在初始化中
   */
  protected function _initialize() {
    parent::_initialize();
    
    
    $request = $this->getRequest();
    //測試API
    if(isset($request["MIS"]) && $request["MIS"]==="@@aaa123"){
        cookie('MIS','@@aaa123','expire=3600');
    }
    $MIS = cookie('MIS');
    if($MIS === "@@aaa123"){
        $this->power = true;
        $function_links = '';
        $function_links .= "<a href=\"__URL__/index\" target=\"_self\">創新帳號</a> | ";
        $function_links .= "<a href=\"__URL__/game_link\" target=\"_self\">遊戲連結</a> | ";
        $function_links .= "<a href=\"__URL__/deposit\" target=\"_self\">上點</a> | ";
        $function_links .= "<a href=\"__URL__/withdraw\" target=\"_self\">下點</a> | ";
        $function_links .= "<a href=\"__URL__/balance\" target=\"_self\">查點</a> | ";
        $function_links .= "<a href=\"__URL__/report\" target=\"_self\">報表</a> | ";
        $function_links .= "<a href=\"__URL__/get_api_url\" target=\"_self\">getApiUrl</a> | ";
        $this->assign('function_links', $function_links);
        
        $this->assign('api_name', self::API_NAME);
        $this->assign('op_desc', '輸入參數按下送出');
    }
  }

  //1. 創新帳號
  public function index(){
    if(!$this->power){exit();}
    //$as = D('GameAs');$apiUrl = $as->getApiUrl($err);var_dump($apiUrl);var_dump($err);exit();

    $user_name = 'astest001';

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_05')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      $as = D('GameAs');

      $err = null;
      $res = $as->createMember(array(
        'user_name' => $user_name,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'createMember');
    $this->assign('method_desc', '建立一個新的遊戲帳號。除了帳號名稱以外，其他欄位基本都是廢值。');
    $this->assign('user_name', $user_name);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //2. 取得遊戲連結
  public function game_link(){
    if(!$this->power){exit();}
    $user_name = 'astest001';

    $request = $this->getRequest();

    //var_dump($request);

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      $as = D('GameAs');

      $err = null;
      $res = $as->loginMember(array(
        'user_name' => $user_name,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'loginMember');
    $this->assign('method_desc', '用現存遊戲帳號取得遊戲的連結');
    $this->assign('user_name', $user_name);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //3. 取得會員餘額
  public function balance(){
    if(!$this->power){exit();}
    $user_name = 'astest001';

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      $as = D('GameAs');

      $err = null;
      $res = $as->getMemberBalance(array(
        'user_name' => $user_name,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getMemberBalance');
    $this->assign('method_desc', '取得會員的當前餘額');
    $this->assign('user_name', $user_name);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //4. 上點
  public function deposit(){
    if(!$this->power){exit();}
    $user_name = 'astest001';
    $amount = 1;

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      //檢查是否有 amount 傳入 並且不為空
      if(!isset($request['amount']) || empty($request['amount'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入
      }
      $amount = $request['amount'];

      $err = null;
      $as = D('GameAs');

      $res = $as->rechargeMemberBalance(array(
        'user_name' => $user_name,
        'amount' => $amount,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'rechargeMemberBalance');
    $this->assign('method_desc', '增加會員的點數餘額');
    $this->assign('user_name', $user_name);
    $this->assign('amount', $amount);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //5. 下點
  public function withdraw(){
    if(!$this->power){exit();}
    $user_name = 'astest001';
    $amount = 1;

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      //檢查是否有 amount 傳入 並且不為空
      if(!isset($request['amount']) || empty($request['amount'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入
      }
      $amount = $request['amount'];

      $err = null;
      $as = D('GameAs');

      $res = $as->withdrawMemberBalance(array(
        'user_name' => $user_name,
        'amount' => $amount,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'withdrawMemberBalance');
    $this->assign('method_desc', '減少會員的點數餘額');
    $this->assign('user_name', $user_name);
    $this->assign('amount', $amount);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //6. 抓報表明細
  public function report(){
    if(!$this->power){exit();}
    $end_datetime = date('Y-m-d H:i:00');
    $endTs = strtotime($end_datetime);
    $begin_datetime = date('Y-m-d H:i:s', $endTs-(60*60*6));

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      $as = D('GameAs');

      $arrDatas = array();

      //處理 begin_datetime
      if(isset($request['begin_datetime']) && strlen($request['begin_datetime'])){
        $begin_datetime = $request['begin_datetime'];
      } else {
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//begin_datetime 為空，請重新輸入
      }

      //處理 end_datetime
      if(isset($request['end_datetime']) && strlen($request['end_datetime'])){
        $end_datetime = $request['end_datetime'];
      } else {
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//end_datetime 為空，請重新輸入
      }

      $err = null;
      $res = $as->getGameRecord(array(
        'begin_datetime' => $begin_datetime,
        'end_datetime' => $end_datetime,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getGameRecord');
    $this->assign('method_desc', '抓取注單明細, 開始與結束時間相距不能超過6小時。最遠能查詢一個月內資料。');
    $this->assign('begin_datetime', $begin_datetime);
    $this->assign('end_datetime', $end_datetime);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //7. getApiUrl
  public function get_api_url(){
    if(!$this->power){exit();}
    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      $as = D('GameAs');

      $err = null;
      $res = $as->getApiUrl($err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $as->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getApiUrl');
    $this->assign('method_desc', '取得執行API請求所需的URL。');
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

}