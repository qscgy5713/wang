<?php
//返水腳本
class ScriptBackWaterAction extends ScriptAction {
    protected $power = false;
    protected $gameCode = "";
    protected $gameCodeArray = array(
        "Sb","Ab","Sa","Dg","Og","Qt","Uc8","Rtg","Bng"
    );
    
    protected $tenTwoArray = array('Uc8','Ab','Sa','Og');//時間區間 12:00~11:59
    protected $tenTenArray = array('Dg','Bng','Rtg','Sb','Qt');//時間區間 00:00~23:59
    /**
     * 初始化
     */
    protected function _initialize() {
        // 執行父類初始化
        parent::_initialize();
        $request = $this->getRequest();
        if(isset($request["MIS"]) && $request["MIS"]==="@@aaa123"){
            cookie('MIS','@@aaa123','expire=3600');
        }
        $MIS = cookie('MIS');
        if($MIS === "@@aaa123"){
            if(!isset($request["gameCode"]) && empty($request["gameCode"])){
                $this->power = false;
            } else {
                if(in_array(ucfirst($request["gameCode"]), $this->gameCodeArray)){
                    $this->power = true;
                    $this->gameCode = ucfirst($request["gameCode"]);
                }
            }
        }
    }
    
    //返水頁面
    public function index(){
        if(!$this->power){exit();}
        
        //讀取遊戲基本資料 開始
        $gameInfo = D("GameInfo");
        $data = array(
            'game_code' => $this->gameCode,
            'waterRank_serial' => 1
        );
        $return = $gameInfo->getGameInfoData($data);//取得遊戲基本資料
        if($return === false){
            var_dump("讀取資料庫失敗");
            exit();
        }
        $gameOneWaterRate = $return['waterRank_waterRate']; //無階層時第一次返水使用的 返水率
        $gameClassId = $return['gameClass_id'];
        $gameClassShowName = $return['gameClass_showName'];
        $gameID = $return['game_id'];
        $gameName = $return['game_name'];
        //讀取遊戲基本資料 結束
        
        echo $return['game_code']." ".$return['gameClass_showName']."  <span style='color:red'>".$return['game_name']."</span> 返水開始<BR>";
        
        $controllerValue = 1;//控制迴圈的次數
        if(date('m') == '01'){//第一天 要多做上個月的返水
            if(in_array($data['game_code'],$this->tenTwoArray)){
                $datetime = date('Y-m-d H:i:s');
                $monthOne = date('Y-m-01 12:00:00'); //本月第一天
                if(strtotime($monthOne) < strtotime($datetime)){
                    $controllerValue = 2;
                }
            } else {
                $controllerValue = 2;
            }
        }
        //$controllerValue = 2;//測試
        for($i=1;$i<=$controllerValue;$i++){
            if($i == 1){//正常返水
                $datetime = date('Y-m-d H:i:s');
                echo "本月返水 返水開始<BR>";
            } else {//上個月返水
                echo "<BR><BR>上月返水 返水開始<BR>";
                if(in_array($data['game_code'],$this->tenTwoArray)){
                    $datetime = date('Y-m-01 11:59:59');
                } else {
                    $datetime = date("Y-m-d 00:00:00",strtotime("-1 day"));
                }
            }
            $data = array(
                'gameClass_id'=>$gameClassId,
                'game_code' => $this->gameCode,
                'dateTime' => $datetime
            );
            $return = $gameInfo->getMemberBackWater($data,$err);//讀取會員 返水明細
            if($return === false){
                var_dump($err);
                exit();
            }
            
            $memberWaterArray = array();
            $memberIdArray = array();
            foreach($return as $key => $value){
                array_push($memberIdArray, $value['memberId']);
                $memberWaterArray[$value['memberId']] = $value;
                if(empty($value['waterRank_waterRate'])){
                    $memberWaterArray[$value['memberId']]['waterRank_waterRate'] = $gameOneWaterRate;
                }
                //$memberWaterArray[$value['memberId']]['backWaterMoney']
                $backWaterMoney = bcmul($value['AllEffective'], $memberWaterArray[$value['memberId']]['waterRank_waterRate'], 4);
                if(!empty($value['decimalPoint_money'])){
                    $oldDecimalPointMoney = $value['decimalPoint_money'];
                    $backWaterMoney = bcadd($backWaterMoney, $oldDecimalPointMoney, 4);
                } else {
                    $oldDecimalPointMoney = 0;
                }
                $backWaterMoneyAfter = floor($backWaterMoney);//返水金額
                $newDecimalPointMoney = bcsub($backWaterMoney, $backWaterMoneyAfter, 4);//剩餘小數點
                
                $memberWaterArray[$value['memberId']]['backWaterMoney'] = $backWaterMoneyAfter;
                $memberWaterArray[$value['memberId']]['decimalPoint_money'] = $newDecimalPointMoney;
                $memberWaterArray[$value['memberId']]['game_id'] = $gameID;
                $memberWaterArray[$value['memberId']]['game_name'] = $gameName;
                $memberWaterArray[$value['memberId']]['betDetails'] = array(
                    "betId"=>$value['AllId'],//注單ID
                    "allNumber"=>$value['AllNumber'],//總筆數
                    "allEffective"=>$value['AllEffective'],//總洗碼
                    "waterRate"=>$memberWaterArray[$value['memberId']]['waterRank_waterRate'],//會員返水%數
                    "backWaterMoney"=>$backWaterMoneyAfter,//計算後 退水金額
                    "oldDecimalPointMoney"=>$oldDecimalPointMoney,//原始小數
                    "newDecimalPointMoney"=>$newDecimalPointMoney//計算後小數
                );
                
                $idExpArray = explode(",",$value['AllId']);
                echo "<BR> 會員帳號 : {$value['memberAccount']} <BR>ID筆數: ".count($idExpArray)." SQL筆數:".$value['AllNumber'];
                if(count($idExpArray) != $value['AllNumber']){
                    echo '  不符合 重新讀取資料...';
                    //var_dump(count($idExpArray),$value['AllNumber'],'err');
                    $data = array(
                        'game_code' => $this->gameCode,
                        'dateTime' => $datetime,
                        'member_id' => $value['memberId']
                    );
                    $oneMemberReturn = $gameInfo->getOneMemberBackWater($data,$err);//讀取單一會員 返水明細
                    if($oneMemberReturn === false){
                        var_dump($err);
                        exit();
                    }
                    $allNumber = count($oneMemberReturn);
                    if($allNumber != $memberWaterArray[$value['memberId']]['AllNumber']){
                        unset($memberWaterArray[$value['memberId']]);
                    } else {
                        $AllId = "";
                        foreach ($oneMemberReturn AS $oneMemberValue){
                            if(empty($AllId)){
                                $AllId = $oneMemberValue['detail_id'];
                            } else {
                                $AllId .= ",".$oneMemberValue['detail_id'];
                            }
                        }
                        $newAllIdArray = explode(",",$AllId);
                        if(count($newAllIdArray) != $allNumber){
                            unset($memberWaterArray[$value['memberId']]);
                        } else {
                            $memberWaterArray[$value['memberId']]['AllId'] = $AllId;
                            $memberWaterArray[$value['memberId']]['betDetails']['betId'] = $AllId;
                        }
                    }
                } else {
                    echo '  符合';
                }
                echo "<BR> 注單ID : {$memberWaterArray[$value['memberId']]['AllId']} <BR>";
                echo " 總洗碼 : {$value['AllEffective']} 返水%數 : {$memberWaterArray[$value['memberId']]['waterRank_waterRate']}";
                echo " 原始小數 : {$oldDecimalPointMoney} 返水金額 : {$backWaterMoney} 返水後小數 : {$newDecimalPointMoney} <BR>";
                /*if($key == 2){
                    break;
                }*/
            }
            $return = $gameInfo->programBackWater($this->gameCode,$memberWaterArray,$err);
                if($return === false){
                var_dump($err);
                exit();
            }
            echo "===============================================================<BR>";
            
            if(count($memberIdArray) != 0){
                //計算會員返水階層 計算洗碼
                $data = array(
                    "gameClassId"=>$gameClassId,
                    "gameClassShowName"=>$gameClassShowName,
                    "memberIdArray" => $memberIdArray,
                    "gameId" => $gameID,
                    "dateTime" => $datetime
                );
                $return = $gameInfo->setMemberWaterrankLevel($this->gameCode,$data,$err);
                if($return === false){
                    var_dump($err);
                    exit();
                }
                echo '更新階層成功<BR>';
            } else {
                echo "無返水名單<BR>";
            }
        }
        if(!isset($_COOKIE['think_language'])){
            $_COOKIE['think_language'] = 'zh-tw';
        } else {
            $_COOKIE['think_language'] = strtolower($_COOKIE['think_language']);
        }
        $gameName = json_decode($gameName, true);
        $gameName = $gameName[$_COOKIE['think_language']];
        $this->assign("gameName",$gameName);
        $this->display();
    }
}