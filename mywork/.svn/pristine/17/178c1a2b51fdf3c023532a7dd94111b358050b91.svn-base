<?php
/*
 * 會員錢包
 */
class CommonMemberWalletModel extends AdminModel {
    protected $tableName = "common_member_wallet";
    protected $tableId = "wallet_id";
    /**
     * 新增 會員錢包 資料
     * @param $data //$data['member_id']
     * @param $err //錯誤訊息
     * @return boolean
     */
    public function addWalletData($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));//註冊失敗
            return false;
        }
        $sql = "INSERT INTO `{$this->tableName}` ";
        $keysql = "";
        $valuesql = "";
        foreach ($data as $key => $value) {
            if(empty($keysql)){
                $keysql = " (`{$key}`";
            } else {
                $keysql .= ",`{$key}`";
            }
            if(empty($valuesql)){
                $valuesql = " ('{$value}'";
            } else {
                $valuesql .= ",'{$value}'";
            }
        }
        $sql .= $keysql.") VALUES ".$valuesql.");";
        $return = $this->query($sql);
        if($return === false){
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_05"));
            return $return;
        }
        return true;
    }
    /**
     * 讀取會員錢包 如果沒有 會自動新增錢包
     * @param $data
     * @param string $err
     */
    public function getWalletData($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));//取得錢包失敗
            return false;
        }
        $sql = "SELECT * FROM `{$this->tableName}`
                WHERE `member_id` = '{$data['member_id']}'
                LIMIT 1;";
        $return = $this->query($sql);
        if($return === false){
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_02"));
            return false;
        }
        if(empty($return[0]['wallet_id']) && $return[0]['wallet_id'] !== 0){
            //如果沒有會員錢包資料 創建會員錢包 再重新讀取資料一次
            $return = $this->addWalletData($data,$err);
            if($return === false){
                return false;
            }
            return $this->getWalletData($data,$err);
        }
        return $return[0];
    }
    /**
     * 後台 會員點數 上點
     * @param array $data
     * @param string $err
     * @return boolean
     */
    public function setWalletDataByAdditionMoneyUseMemberPoint($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));//取得錢包失敗
            return false;
        }
        if(empty($data['addMoney']) && $data['addMoney'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));
            return false;
        }
        $memberId = $data['member_id'];
        $addMoney = $data['addMoney'];
        $walletLog_type = $data['walletLog_type'];
        $adminId = $data['admin_id'];
        $upMain = $data['upMain'];
        $walletLog_item_id = $data['walletLog_item_id'];
        
        $CommonMember = D("CommonMember");
        $data = array(
            "member_id"=>$memberId
        );
        $return = $CommonMember->getMemberAgentDataByMermberID($data);
        if($return === false){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));
            return false;
        }
        $agentId = $return['agent_id'];
        $agentTree = $return['agent_tree'];
        $agentRatio = $return['ratio_tree'];
        
        //事務處理開始
        $this->startTrans();
        
        //讀取 會員電子錢包    鎖表   開始
        $sql = "SELECT * FROM `common_member_wallet`
                WHERE `member_id` = '{$memberId}'
                FOR UPDATE;";
        $return = $this->query($sql);
        if($return === false){
            $this->rollback();//事務處理失敗 回退
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_05'));
            return false;
        }
        if(empty($return[0])){
            $this->rollback();//事務處理失敗 回退
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_06'));
            return false;
        }
        
        //讀取 會員電子錢包   鎖表  
        $memberWalletDataArray = $return[0];//會員錢包資料
        
        $walletLogBefore = $memberWalletDataArray["wallet_money"];
        $walletLogAfter = $walletLogBefore + $addMoney;
        
        //對電子錢包 加款 開始
        $data = array(
            "member_id" => $memberId,
            "wallet_money" => $addMoney
        );
        $return = $this->setWalletDataByAdditionMoney($data,$err);
        if($return === false){
            $this->rollback();//事務處理失敗 回退
            return false;
        }
        if($return !== 1){
            $this->rollback();//事務處理失敗 回退
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_07"));
            return false;
        }
        //對電子錢包 加款 結束
        
        $nowTime = time();//取得現在時間戳
        $ip = getIp();
        $ip = get_ip_inet_pton($ip);
        //新增帳變紀錄 開始
        $CommonMemberWalletLog = D("CommonMemberWalletLog");
        $data = array(
            "member_id" => $memberId,
            "agent_id" => $agentId,
            "agent_tree"=>$agentTree,
            "ratio_tree"=>$agentRatio,
            "walletLog_operating" => 1,//1點數增加 2點數減少
            "walletLog_type" => $walletLog_type,//帳變類型 1儲值表 2託售表 3.轉移表
            "walletLog_type_class"=>'2',
            "walletLog_item_id" => $walletLog_item_id,//上點ID
            "walletLog_money" => (int)$addMoney,
            "walletLog_before" => (int)$walletLogBefore,
            "walletLog_after" => (int)$walletLogAfter,
            "walletLog_main" => $upMain.";後台上點;錢包;加款",
            "walletLog_ip" => $ip,
            "walletLog_createTime" => $nowTime,
            "admin_id"=>$adminId
        );
        
        $return = $CommonMemberWalletLog->addWalletLogData($data,$err);
        if($return === false){
            $this->rollback();//事務處理失敗 回退
            return false;
        }
        $walletLogId = $return;
        //新增帳變紀錄 結束
        $this->commit();//事務處理成功
        return true;
    }
    /**
     * 後台 會員點數 下點
     * @param array $data
     * @param string $err
     * @return boolean
     */
    public function setWalletDataByDeductMoneyUseMemberPoint($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));//取得錢包失敗
            return false;
        }
        if(empty($data['deductMoney']) && $data['deductMoney'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));
            return false;
        }
        $memberId = $data['member_id'];
        $deductMoney = $data['deductMoney'];
        $walletLog_type = $data['walletLog_type'];
        $adminId = $data['admin_id'];
        $upMain = $data['upMain'];
        $walletLog_item_id = $data['walletLog_item_id'];
        
        $CommonMember = D("CommonMember");
        $data = array(
            "member_id"=>$memberId
        );
        $return = $CommonMember->getMemberAgentDataByMermberID($data);
        if($return === false){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));
            return false;
        }
        $agentId = $return['agent_id'];
        $agentTree = $return['agent_tree'];
        $agentRatio = $return['ratio_tree'];
        
        //事務處理開始
        $this->startTrans();
        
        //讀取 會員電子錢包    鎖表   開始
        $sql = "SELECT * FROM `common_member_wallet`
                WHERE `member_id` = '{$memberId}'
                FOR UPDATE;";
        $return = $this->query($sql);
        if($return === false){
            $this->rollback();//事務處理失敗 回退
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_05'));
            return false;
        }
        if(empty($return[0])){
            $this->rollback();//事務處理失敗 回退
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_06'));
            return false;
        }
        
        //讀取 會員電子錢包   鎖表
        $memberWalletDataArray = $return[0];//會員錢包資料
        
        $walletLogBefore = $memberWalletDataArray["wallet_money"];
        $walletLogAfter = $walletLogBefore - $deductMoney;
        
        //對電子錢包 加款 開始
        $data = array(
            "member_id" => $memberId,
            "wallet_money" => $deductMoney
        );
        $return = $this->setWalletDataByDeductMoney($data,$err);
        if($return === false){
            $this->rollback();//事務處理失敗 回退
            return false;
        }
        if($return !== 1){
            $this->rollback();//事務處理失敗 回退
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_07"));
            return false;
        }
        //對電子錢包 加款 結束
        
        $nowTime = time();//取得現在時間戳
        $ip = getIp();
        $ip = get_ip_inet_pton($ip);
        //新增帳變紀錄 開始
        $CommonMemberWalletLog = D("CommonMemberWalletLog");
        $data = array(
            "member_id" => $memberId,
            "agent_id" => $agentId,
            "agent_tree"=>$agentTree,
            "ratio_tree"=>$agentRatio,
            "walletLog_operating" => 2,//1點數增加 2點數減少
            "walletLog_type" => $walletLog_type,//帳變類型 3.轉移表
            "walletLog_type_class"=>'2',
            "walletLog_item_id" => $walletLog_item_id,//對應ID
            "walletLog_money" => -$deductMoney,
            "walletLog_before" => (int)$walletLogBefore,
            "walletLog_after" => (int)$walletLogAfter,
            "walletLog_main" => $upMain.";後台下點;錢包;扣款",
            "walletLog_ip" => $ip,
            "walletLog_createTime" => $nowTime,
            "admin_id"=>$adminId
        );
        $return = $CommonMemberWalletLog->addWalletLogData($data,$err);
        if($return === false){
            $this->rollback();//事務處理失敗 回退
            return false;
        }
        $walletLogId = $return;
        //新增帳變紀錄 結束
        $this->commit();//事務處理成功
        return true;
    }
    /**
     * 對會員電子錢包下點
     * @param array $data
     * @param string $err
     * @return boolean|false
     */
    public function setWalletDataByDeductMoney($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));
            return false;
        }
        if(empty($data['wallet_money']) && $data['wallet_money'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));
            return false;
        }
        $sql = "UPDATE `{$this->tableName}`
                SET `wallet_money` = `wallet_money` - {$data['wallet_money']}
                WHERE `member_id` = '{$data['member_id']}';";
        $return = $this->execute($sql);
        if ($return === false) {
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));
            return false;
        }
        return $return;
    }
    /**
     * 對會員電子錢包上點
     * @param $data
     * @param string $err
     * @return boolean|false
     */
    public function setWalletDataByAdditionMoney($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));
            return false;
        }
        if(empty($data['wallet_money']) && $data['wallet_money'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));
            return false;
        }
        //儲值成功上點使用 累積儲值金額 開始
        $totalRechargeSql = "";
        if(isset($data['wallet_totalRecharge']) AND !empty($data['wallet_totalRecharge'])){
            $totalRechargeSql = ",`wallet_totalRecharge` = `wallet_totalRecharge` + {$data['wallet_totalRecharge']}";
        }
        //儲值成功上點使用 累積儲值金額 結束
        
        $sql = "UPDATE `{$this->tableName}`
                SET `wallet_money` = `wallet_money` + {$data['wallet_money']}
                    {$totalRechargeSql}
                WHERE `member_id` = '{$data['member_id']}';";
        $return = $this->execute($sql);
        if ($return === false) {
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));
            return false;
        }
        return $return;
    }
    /**
     * 對會員 累積託售 增加
     * @param array $data
     * @param string $err
     * @return boolean|false
     */
    public function setWalletDataByAddTotalWithdraw($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));
            return false;
        }
        if(empty($data['wallet_totalWithdraw']) && $data['wallet_totalWithdraw'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));
            return false;
        }
        $sql = "UPDATE `{$this->tableName}`
                SET `wallet_totalWithdraw` = `wallet_totalWithdraw` + {$data['wallet_totalWithdraw']}
                WHERE `member_id` = '{$data['member_id']}';";
        $return = $this->execute($sql);
        if ($return === false) {
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));
            return false;
        }
        return $return;
    }
}