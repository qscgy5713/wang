<?php
class GivenRecordAction extends AgentAction {
    
    protected $searchMemberId = '';
    
    protected $comeAgentTree = '';
    protected $comeAgentId = '';
    protected $comeAgentAccount = '';
    
    protected $startTime = '';
    protected $endTime = '';
    
    protected function _initialize() {
        // 執行父類初始化
        parent::_initialize();
        
        $request = $this->getRequest();
        
        $searchMemberAccount = "";
        if(isset($request['searchMemberAccount']) && !empty($request['searchMemberAccount'])){
            $searchMemberAccount = $request['searchMemberAccount'];
            $CommonMember = D("CommonMember");
            $data = array(
                "member_account" => $searchMemberAccount,
                "agent_tree" => $_SESSION['Agent']['tree']
            );
            $return = $CommonMember->searchMemberByMemberAccountUseGiven($data);
            if($return === false || empty($return)){
                $this->assign("searchMemberErr","true");
                $this->assign("searchMemberErrMessage","無此 ".$searchMemberAccount." 會員帳號");
                $searchMemberAccount = "";
            }
            $this->searchMemberId = $return["member_id"];
            $request["agentTree"] = $return["agent_tree"];
            
            $this->assign("searchMemberAccount",$searchMemberAccount);
        }
        
        //代理線開始
        $CommonAgentTree = D("CommonAgentTree");
        $loginArray = array(
            0 => array(
                "agentTree"=>$_SESSION['Agent']['tree'],
                "agentId"=>$_SESSION['Agent']['id'],
                "agentAccount"=>$_SESSION['Agent']['account']
            )
        );
        if(empty($request["agentTree"])
            || !preg_match("/".$_SESSION['Agent']['tree']."/i", $request["agentTree"])
            || $request["agentTree"] == $_SESSION['Agent']['tree']
            ){
                $this->comeAgentTree = $_SESSION['Agent']['tree'];
                $this->comeAgentId = $_SESSION['Agent']['id'];
                $this->comeAgentAccount = $_SESSION['Agent']['account'];
        } else {
            $this->comeAgentTree = $request["agentTree"];
            $comeTreeExpArray = explode(",",$_SESSION['Agent']['tree']);
            $agentTreeExpArray = explode(",",$this->comeAgentTree);
            $getTreeNumber = count($agentTreeExpArray) - count($comeTreeExpArray);//要取代理樹的數量
            $startNumber = count($comeTreeExpArray) - 1;
            $endNumber = $startNumber + $getTreeNumber;
            $comeReplace = "";
            for($i=$startNumber;$i<$endNumber;$i++){
                $comeReplace .= $agentTreeExpArray[$i].",";
            }
            $exArray = explode(",",$comeReplace);
            $return = $CommonAgentTree->getAgentTreeDataByManyAgentId($exArray);
            if($return === false){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
            }
            //var_dump($return);//exit();
            $agentAccount = "";
            foreach ($return as $value){
                array_push($loginArray,$value);
                $agentAccount = $value["agentAccount"];
            }
            $this->comeAgentAccount = $agentAccount;
        }
        $exArray = explode(",",$this->comeAgentTree);
        $this->comeAgentId = $exArray[count($exArray)-2];
        //代理線結束
        
        
        $today = date('Y-m-d');
        $this->startTime = $today.' 00:00:00';
        $this->endTime = $today.' 23:59:59';
        
        if(isset($request['startTime'])){
            $this->startTime = $request['startTime'];
        }
        if(isset($request['endTime'])){
            $this->endTime = $request['endTime'];
        }
        
        
        if(date('D') === 'Mon') {
            $tsThisWeek = strtotime('today');
        } else {
            $tsThisWeek = strtotime('last monday');
        }
        $tsYesterday = strtotime('yesterday');
        $tsLastMonth = strtotime('last month')-((60*60*24*(date('d')-1)));
        $tsThisMonth = strtotime('this month')-((60*60*24*(date('d')-1)));
        $lastWeekA = date('Y-m-d',$tsThisWeek-(60*60*24*7));
        $lastWeekB = date('Y-m-d',$tsThisWeek-(60*60*24*1));
        $thisWeekA = date('Y-m-d',$tsThisWeek+(60*60*24*0));
        $thisWeekB = date('Y-m-d',$tsThisWeek+(60*60*24*6));
        $yesterday = date('Y-m-d',$tsYesterday);
        $lastMonthA = date('Y-m-d',$tsLastMonth);
        $lastMonthB = date('Y-m-d',$tsLastMonth+(60*60*24*(cal_days_in_month(CAL_GREGORIAN,date("m",strtotime($lastMonthA)),date("Y", strtotime($lastMonthA)))-1)));
        $thisMonthA = date('Y-m-d',$tsThisMonth);
        $thisMonthB = date('Y-m-d',$tsThisMonth+(60*60*24*(cal_days_in_month(CAL_GREGORIAN,date("m"),date("Y"))-1)));
        $this->assign("startTime",$this->startTime);//查詢開始時間
        $this->assign("endTime",$this->endTime);//查詢最後時間
        $this->assign("today",$today);//今日
        $this->assign("yesterday",$yesterday);//昨日
        $this->assign("thisWeekA",$thisWeekA);//本週第一天
        $this->assign("thisWeekB",$thisWeekB);//本週最後一天
        $this->assign("lastWeekA",$lastWeekA);//上週第一天
        $this->assign("lastWeekB",$lastWeekB);//上週最後一天
        $this->assign("thisMonthA",$thisMonthA);//本月第一天
        $this->assign("thisMonthB",$thisMonthB);//本月最後一天
        $this->assign("lastMonthA",$lastMonthA);//上月第一天
        $this->assign("lastMonthB",$lastMonthB);//上月最後一天
        
    }
    
    //TODO:8 贈點記錄
    public function index(){
        $request = $this->getRequest();



        $typesArray = array();
        $typesTotalMoney = 0;
        $typesTotalNumber = 0;

        $agentArray = array();
        $agentTotalMoney = 0;
        $agentTotalNumber = 0;

        $memberArray = array();
        $memberTotalMoney = 0;
        $memberTotalNumber = 0;

        $CommonMemberWalletLog = D("CommonMemberWalletLog");
        $CommonAgent = D("CommonAgent");

        $data = array(
            "agent_tree"=>$this->comeAgentTree,
            "startTime"=>strtotime($this->startTime),
            "endTime"=>strtotime($this->endTime),
            "groupBy"=>"walletLog_item_id",
            "walletLog_type"=>4, //搜尋活動
            "searchMemberId"=>$this->searchMemberId,//搜尋會員ID
        );
        $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }
        $eventArray = $return;
        foreach($eventArray as $key => $value){
            $value['type'] = 4;
            $typesTotalMoney += $value['allMoney'];
            $typesTotalNumber += $value['allNumber'];
            array_push($typesArray, $value);
        }

        $data = array(
            "agent_tree"=>$this->comeAgentTree,
            "startTime"=>strtotime($this->startTime),
            "endTime"=>strtotime($this->endTime),
            "groupBy"=>"walletLog_item_id",
            "walletLog_type"=>5, //搜尋返水
            "searchMemberId"=>$this->searchMemberId,//搜尋會員ID
        );
        $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        foreach ($return as $key => $value) {
            $textArray = json_decode($return[$key]['givenName'], true);
            $return[$key]['givenName'] = $textArray[$_COOKIE['think_language']];
        }
        $waterArray = $return;
        foreach($waterArray as $key => $value){
            $typesTotalMoney += $value['allMoney'];
            $typesTotalNumber += $value['allNumber'];
            array_push($typesArray, $value);
        }
        
        $data = array(
            "agent_tree"=>$this->comeAgentTree,
            "startTime"=>strtotime($this->startTime),
            "endTime"=>strtotime($this->endTime),
            "groupBy"=>"walletLog_item_id",
            "walletLog_type"=>6, //搜尋其他
            "searchMemberId"=>$this->searchMemberId,//搜尋會員ID
        );
        $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        foreach($return as $key => $value){
            $typesTotalMoney += $value['allMoney'];
            $typesTotalNumber += $value['allNumber'];
            array_push($typesArray, $value);
        }

        if(!empty($this->searchMemberId)){
            $agentArray = array();
        } else {
            //搜尋代理 開始
            $agentArray = array();
            $data = array(
                "agent_id"=>$this->comeAgentId,
                "agent_tree"=>$this->comeAgentTree,
                "startTime"=>strtotime($this->startTime),
                "endTime"=>strtotime($this->endTime),
                "groupBy"=>"agent_id",
                "walletLog_type"=>'all'
            );
            $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
            if($return === false){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
            }
            $giveAgentReturn = $return;
            $comeTreeExpArray = explode(",",$this->comeAgentTree);
            foreach($giveAgentReturn as $key => $value){
                $agentTotalMoney += $value['allMoney'];
                $agentTotalNumber += $value['allNumber'];

                $agentTreeExpArray = explode(",",$value['agent_tree']);
                $getTreeNumber = count($agentTreeExpArray) - count($comeTreeExpArray);//要取代理樹的數量
                $startNumber = count($comeTreeExpArray) - 1;
                $endNumber = $startNumber + $getTreeNumber;
                $newAgnetTree = "";
                for($i=$startNumber;$i<$endNumber;$i++){
                    $newAgnetTree .= $agentTreeExpArray[$i].",";
                }
                $agnetTreeArray = explode(",",$newAgnetTree);

                if(isset($agentArray[$agnetTreeArray[0]])){
                    $agentArray[$agnetTreeArray[0]]["allMoney"] = bcadd($agentArray[$agnetTreeArray[0]]["allMoney"], $value['allMoney']);
                    $agentArray[$agnetTreeArray[0]]["allNumber"] = bcadd($agentArray[$agnetTreeArray[0]]["allNumber"], $value['allNumber']);
                } else {
                    if(count($agnetTreeArray) > 1){
                        $data = array(
                            'agent_id' =>$agnetTreeArray[0],
                        );
                        $return = $CommonAgent->getAgentDataById($data);
                        if($return === false){
                            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
                        }
                        $agentAccount = $return['agent_account'];
                        $agentTree = $return['agent_tree'];
                    } else {
                        $agentAccount = $value['agent_account'];
                        $agentTree = $this->comeAgentTree.$newAgnetTree;
                    }
                    $data = array(
                        "agent_account" => $agentAccount,
                        "agent_tree" => $agentTree,
                        "allMoney" => $value['allMoney'],
                        "allNumber" => $value['allNumber']
                    );
                    $agentArray[$agnetTreeArray[0]] = $data;
                }
            }
            //搜尋代理 結束
        }
        //var_dump($agentArray);exit();

        //搜尋會員 開始
        $data = array(
            "agent_id"=>$this->comeAgentId,
            "startTime"=>strtotime($this->startTime),
            "endTime"=>strtotime($this->endTime),
            "groupBy"=>"member_id",
            "walletLog_type"=>'all',
            "searchMemberId"=>$this->searchMemberId,//搜尋會員ID
        );
        $return = $CommonMemberWalletLog->getMemberGivenData($data,$err);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        $memberArray = $return;
        foreach($memberArray as $key => $value){
            $memberTotalMoney += $value['allMoney'];
            $memberTotalNumber += $value['allNumber'];
        }
        //搜尋會員 結束
        //var_dump($memberArray);exit();

        $this->assign("loginArray",$loginArray);
        $this->assign("comeAgentAccount",$this->comeAgentAccount);
        $this->assign("comeAgentId",$this->comeAgentId);
        $this->assign("comeAgentTree",$this->comeAgentTree);

        $this->assign("typesArray",$typesArray);//依類型
        $this->assign("typesTotalMoney",$typesTotalMoney);//依贈點總和
        $this->assign("typesTotalNumber",$typesTotalNumber);//依贈點數量
        $this->assign("typesEmpty","<tr><td colspan='4' style='text-align:center;'>無類型資料</td></tr>");//無資料時輸出
        $this->assign("agentArray",$agentArray);//依代理
        $this->assign("agentTotalMoney",$agentTotalMoney);//依贈點總和
        $this->assign("agentTotalNumber",$agentTotalNumber);//依贈點數量
        $this->assign("agentEmpty","<tr><td colspan='4' style='text-align:center;'>無代理資料</td></tr>");//無資料時輸出


        $this->assign("memberArray",$memberArray);//依會員
        $this->assign("memberTotalMoney",$memberTotalMoney);//依贈點總和
        $this->assign("memberTotalNumber",$memberTotalNumber);//依贈點數量
        $this->assign("memberEmpty","<tr><td colspan='4' style='text-align:center;'>無會員資料</td></tr>");//無資料時輸出
        $this->display();
    }
}