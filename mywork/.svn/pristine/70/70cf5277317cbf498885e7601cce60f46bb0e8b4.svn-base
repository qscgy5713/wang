<?php

//require("bingoEncode/bingoEncode.php");

class GameBgModel {
  public $responseArr;
  public $curlError;
  public $err;

  protected $cfg_base_url = 'http://atm688.net/api.php';
  protected $cfg_agent_name = '2c94ade1d0e4f469';
  protected $cfg_agent_key = '137bf59dc9fb5d31';

	/*
	 * 如果有初始化 可以設定在初始化中
	 */
	protected function _initialize() {
		parent::_initialize();
	}

	//--------------------非通用函數--------------------

	/**
	 * 註冊新會員
	 * @param $data['user_name'] 會員帳號
   * @param $data['password'] 會員密碼
   * @param $data['nickname'] 會員暱稱 (非必須)
   * @param &$err 盛裝錯誤(非必須)
	 * @return 結果 (bool)
	 */
	public function createMember($arrDatas, &$argErr = null) {
    $arrKeys = array(
      'user_name' => array('required'=>1,),
      'password' => array('required'=>1,),
      'nickname' => array('required'=>0,'default'=>''),
    );

    foreach ($arrKeys as $dk => $dv) {
      $dk = strtolower($dk);
      $isKeyRequired = ($dv['required']==1);
      if ( array_key_exists($dk, $arrDatas) ) {
        $temp = "_{$dk}";
        $$temp = $arrDatas[$dk];
      } else {
        if ($isKeyRequired) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
          return false;
        } else {
          if ( array_key_exists('default', $dv) ) {
            $temp = "_{$dk}";
            $$temp = $dv['default'];
          }
        }
      }
    }

    $cmnCode = 'A1';
    $cmd = "{$cmnCode},{$_user_name},{$_password},{$_nickname}";
    $response = $this->_bingoCmd($cmd);
    $isSuccess = $this->_produceError($response);
    if ($isSuccess === true) {
      $argErr = null;
      return true;
    } else {
      $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')).": ".$isSuccess;
      return false;
    }
	}

	/**
	 * 會員登入
   * @param $data['user_name'] 會員帳號
   * @param $data['token'] token (非必須)
   * @param &$err 盛裝錯誤(非必須)
   * @return 遊戲URL(string)
	 */
	public function loginMember($arrDatas, &$argErr = null) {
    $arrKeys = array(
      'user_name' => array('required'=>1,),
      'token' => array('required'=>0,),
    );

    foreach ($arrKeys as $dk => $dv) {
      $dk = strtolower($dk);
      $isKeyRequired = ($dv['required']==1);
      if ( array_key_exists($dk, $arrDatas) ) {
        $temp = "_{$dk}";
        $$temp = $arrDatas[$dk];
      } else {
        if ($isKeyRequired) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
          return false;
        } else {
          if ( array_key_exists('default', $dv) ) {
            $temp = "_{$dk}";
            $$temp = $dv['default'];
          }
        }
      }
    }

    if ((!isset($_token)) || (!strlen($_token))) {
      $token = $this->getLoginToken(array(
        'user_name' => $_user_name,
      ),$argErr);

      if ($token !== false) {
        $response = $this->_produceError($token);
        if ($response !== true) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')).": ".$response;  //取得 token 返回了錯誤
          return false;
        } else {
          $_token = $token;
        }
      } else {
        $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));  //取得 token 失敗
        return false;
      }
    }

    $url = $this->cfg_base_url.'?login='.$_token;
    return $url;
	}


    /**
     * 取得遊戲連結用的 token
     * @param $data['user_name'] 會員帳號
     * @param &$err 盛裝錯誤(非必須)
     * @return 平博創出的會員ID (string)
     */
    public function getLoginToken($arrDatas, &$argErr = null) {
      $arrKeys = array(
        'user_name' => array('required'=>1,),
      );

      foreach ($arrKeys as $dk => $dv) {
        $dk = strtolower($dk);
        $isKeyRequired = ($dv['required']==1);
        if ( array_key_exists($dk, $arrDatas) ) {
          $temp = "_{$dk}";
          $$temp = $arrDatas[$dk];
        } else {
          if ($isKeyRequired) {
            $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
            return false;
          } else {
            if ( array_key_exists('default', $dv) ) {
              $temp = "_{$dk}";
              $$temp = $dv['default'];
            }
          }
        }
      }

      $cmnCode = 'P1';
      $cmd = "{$cmnCode},{$_user_name}";
      $token = $this->_bingoCmd($cmd);
      return $token;
      /*$isSuccess = $this->_produceError($response);
      if ($isSuccess === true) {
        $argErr = null;
        return true;
      } else {
        $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')).": ".$response;
        return false;
      }*/
    }

	/**
	 * 取得會員餘額
   * @param $data['user_name'] 會員帳號
   * @param &$err 盛裝錯誤(非必須)
   * @return 餘額 (number)
	 */
	public function getMemberBalance($arrDatas, &$argErr = null) {
    $arrKeys = array(
      'user_name' => array('required'=>1,),
    );

    foreach ($arrKeys as $dk => $dv) {
      $dk = strtolower($dk);
      $isKeyRequired = ($dv['required']==1);
      if ( array_key_exists($dk, $arrDatas) ) {
        $temp = "_{$dk}";
        $$temp = $arrDatas[$dk];
      } else {
        if ($isKeyRequired) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
          return false;
        } else {
          if ( array_key_exists('default', $dv) ) {
            $temp = "_{$dk}";
            $$temp = $dv['default'];
          }
        }
      }
    }

    $cmnCode = 'R1';
    $cmd = "{$cmnCode},{$_user_name},0";
    $response = $this->_bingoCmd($cmd);
    $isSuccess = $this->_produceError($response);
    if ($isSuccess === true) {
      $temp = explode(',',$response);
      if (isset($temp[2])) {
        $argErr = null;
        return $temp[2];
      } else {
        $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));  //回應格式不正確
        return false;
      }
    } else {
      $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')).": ".$isSuccess;
      return false;
    }
	}

	/**
	 * 下點(提款)
   * @param $data['user_name'] 會員帳號
   * @param $data['amount'] 數額
   * @param &$err 盛裝錯誤(非必須)
   * @return 交易後餘額 (number)
	 */
	public function withdrawMemberBalance($arrDatas, &$argErr = null) {
    $arrKeys = array(
      'user_name' => array('required'=>1,),
      'amount' => array('required'=>1,),
    );

    foreach ($arrKeys as $dk => $dv) {
      $dk = strtolower($dk);
      $isKeyRequired = ($dv['required']==1);
      if ( array_key_exists($dk, $arrDatas) ) {
        $temp = "_{$dk}";
        $$temp = $arrDatas[$dk];
      } else {
        if ($isKeyRequired) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
          return false;
        } else {
          if ( array_key_exists('default', $dv) ) {
            $temp = "_{$dk}";
            $$temp = $dv['default'];
          }
        }
      }
    }

    $cmnCode = 'R1';
    $_amount = abs($_amount);
    $_amount -= (2*$_amount);
    $cmd = "{$cmnCode},{$_user_name},{$_amount}";
    $response = $this->_bingoCmd($cmd);
    $isSuccess = $this->_produceError($response);
    if ($isSuccess === true) {
      $temp = explode(',',$response);
      if (isset($temp[2])) {
        $argErr = null;
        return $temp[2];
      } else {
        $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));  //回應格式不正確
        return false;
      }
    } else {
      $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')).": ".$isSuccess;
      return false;
    }
	}

	/**
	 * 上點(加款)
   * @param $data['user_name'] 會員帳號
   * @param $data['amount'] 數額
   * @param &$err 盛裝錯誤(非必須)
   * @return 交易後餘額 (number)
   */
	public function rechargeMemberBalance($arrDatas, &$argErr = null) {
    $arrKeys = array(
      'user_name' => array('required'=>1,),
      'amount' => array('required'=>1,),
    );

    foreach ($arrKeys as $dk => $dv) {
      $dk = strtolower($dk);
      $isKeyRequired = ($dv['required']==1);
      if ( array_key_exists($dk, $arrDatas) ) {
        $temp = "_{$dk}";
        $$temp = $arrDatas[$dk];
      } else {
        if ($isKeyRequired) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
          return false;
        } else {
          if ( array_key_exists('default', $dv) ) {
            $temp = "_{$dk}";
            $$temp = $dv['default'];
          }
        }
      }
    }

    $cmnCode = 'R1';
    $_amount = abs($_amount);
    $cmd = "{$cmnCode},{$_user_name},{$_amount}";
    $response = $this->_bingoCmd($cmd);
    $isSuccess = $this->_produceError($response);
    if ($isSuccess === true) {
      $temp = explode(',',$response);
      if (isset($temp[2])) {
        $argErr = null;
        return $temp[2];
      } else {
        $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));  //回應格式不正確
        return false;
      }
    } else {
      $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')).": ".$isSuccess;
      return false;
    }
	}

	/**
	 * 抓取注單報表
   * @param $data['user_name'] 會員帳號
   * @param $data['begin_datetime'] 起始日期時間
   * @param $data['end_datetime'] 結束日期時間
   * @param $data['user_name'] 查詢的用戶名稱 (非必須)
   * @param &$err 盛裝錯誤(非必須)
   * @return 報表明細(array)
   *
   * [GetAllBetDetailsForTimeIntervalDV]
   * This web service will fetch bet details of lobby for a time interval maximum 24 hours. The
   * frequency of the call should be made to this API 5 times per 5 minutes otherwise it will
   * throw an error.
	 */
	public function getGameRecord($arrDatas, &$argErr = null) {
    $arrKeys = array(
      'max_mod_id' => array('required'=>0,),
    );

    foreach ($arrKeys as $dk => $dv) {
      $dk = strtolower($dk);
      $isKeyRequired = ($dv['required']==1);
      if ( array_key_exists($dk, $arrDatas) ) {
        $temp = "_{$dk}";
        $$temp = $arrDatas[$dk];
      } else {
        if ($isKeyRequired) {
          $argErr = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));  //必需的KEY不存在
          return false;
        } else {
          if ( array_key_exists('default', $dv) ) {
            $temp = "_{$dk}";
            $$temp = $dv['default'];
          }
        }
      }
    }

	}

	//--------------------非通用函數--------------------

  /* send commands to bingo api */
  protected function _bingoCmd($argCmdStr) {
    //function bingo($str) {
    //$name='qw001';$key='a1dT6u';$url='http://atm688.net/api.php';
    //$inst=bingoEncode($str,$key);
    //return fgets(fopen($url.'?name='.$name.'&inst='.$inst,'r'));
    $encCmd = @ bingoEncode( $argCmdStr,$this->cfg_agent_key );
    while (strpos($encCmd,"+") !== false) {
      $encCmd = @ bingoEncode( $argCmdStr,$this->cfg_agent_key );
    }
    $url = $this->cfg_base_url;
    $url .= '?name=' . $this->cfg_agent_name;
    $url .= '&inst=' . $encCmd;

    $f = @ fopen($url,'r');
    if ($f) {
      return fgets($f);
    } else {
      return false;
    }
  }

  /*
    parse response string to see if any error is contained.
    And set up err code and err msg
   */
  protected function _produceError($argResponse) {  //回傳值 false:有錯誤, true:沒有發現錯誤
    $err = array(
      -1 => "無此帳號",
      -2 => "密碼錯誤",
      -3 => "帳號停權",
      -4 => "帳號異常",
      -9 => "參數異常",
      -101 => "此帳號已存在",
      -102 => "並非所屬下層",
      -103 => "無此上層帳號",
      -104 => "點數大於上層限制",
      -105 => "成數大於上層限制",
      -106 => "無此帳號",
      -107 => "限額傳入總數錯誤",
      -108 => "限額傳入值大於上限",
      -109 => "最低額度傳入值總數錯誤",
      -110 => "最低額度傳入值低於上限",
      -111 => "退水傳入值總數錯誤",
      -112 => "退水傳入值低於上限",
      -113 => "開關傳入值總數錯誤",
      -113 => "上層未開卻傳入開值",
      -601 => "帳號格式錯誤",
      -602 => "密碼格式錯誤",
      -603 => "上層帳號格式錯誤",
      -604 => "傳入值並非數字",
      -904 => "傳入值錯誤",
      -905 => "無此代理",
      -940 => "指令錯誤",
      -950 => "驗證碼錯誤"
    );

    if ( array_key_exists($argResponse, $err) ) {
      return "{$err[$argResponse]} (code {$argResponse})";
    } else {
      return true;
    }
  }

}
