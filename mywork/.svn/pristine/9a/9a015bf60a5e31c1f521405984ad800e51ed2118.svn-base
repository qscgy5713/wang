<?php

class GameOG2Action extends MemberAction {
  const API_NAME = 'OG2 東方真人二代';
  protected $power = false;
  protected $gameName = "Og2";
  /*
   * 如果有初始化 可以設定在初始化中
   */
  protected function _initialize() {
    parent::_initialize();
    $request = $this->getRequest();
    //測試API
    if(isset($request["MIS"]) && $request["MIS"]==="@@aaa123"){
        cookie('MIS','@@aaa123','expire=3600');
    }
    $MIS = cookie('MIS');
    if($MIS === "@@aaa123"){
        $this->power = true;
        $function_links = '';
        $function_links .= "<a href=\"__URL__/index\" target=\"_self\">創新帳號</a> | ";
        $function_links .= "<a href=\"__URL__/game_link\" target=\"_self\">遊戲連結</a> | ";
        $function_links .= "<a href=\"__URL__/deposit\" target=\"_self\">上點</a> | ";
        $function_links .= "<a href=\"__URL__/withdraw\" target=\"_self\">下點</a> | ";
        $function_links .= "<a href=\"__URL__/balance\" target=\"_self\">查點</a> | ";
        $function_links .= "<a href=\"__URL__/report\" target=\"_self\">報表</a> | ";
        $function_links .= "<a href=\"__URL__/set_default_bet_limit_id\" target=\"_self\">setDefaultBetLimitId</a> | ";
        $function_links .= "<a href=\"__URL__/set_user_bet_limit_id\" target=\"_self\">setUserBetLimitId</a>";
        $this->assign('function_links', $function_links);
    
        $this->assign('api_name', self::API_NAME);
        $this->assign('op_desc', '輸入參數按下送出');
    }
  }

  //1. 創新帳號
  public function index(){
    if(!$this->power){exit();}
    $user_name = 'og2test001';
    $email = 'test@email.com';
    $country = 'China';
    $language = 'cn';
    $birthdate = '1990-01-01';

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 country 傳入 並且不為空
      if(!isset($request['country']) || empty($request['country'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//country 為空，請重新輸入
      }
      $country = $request['country'];

      //檢查是否有 email 傳入 並且不為空
      if(!isset($request['email'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//沒給email，請重新輸入
      }
      $email = $request['email'];

      //檢查是否有 language 傳入 並且不為空
      if(!isset($request['language']) || empty($request['language'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));//language 為空，請重新輸入
      }
      $language = $request['language'];

      //檢查是否有 birthdate 傳入 並且不為空
      if(!isset($request['birthdate']) || empty($request['birthdate'])){
        $this->error(L(strtoupper('birthdate' . __CLASS__ . '_' . __FUNCTION__ . '_04')));//birthdate 為空，請重新輸入
      }
      $birthdate = $request['birthdate'];

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_05')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      $og2 = D('GameOg2');

      $err = null;
      $res = $og2->createMember(array(
        'user_name' => $user_name,
        'email' => $email,
        'language' => $language,
        'birthdate' => $birthdate,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'createMember');
    $this->assign('method_desc', '建立一個新的遊戲帳號。除了帳號名稱以外，其他欄位基本都是廢值。');
    $this->assign('user_name', $user_name);
    $this->assign('email', $email);
    $this->assign('country', $country);
    $this->assign('language', $language);
    $this->assign('birthdate', $birthdate);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //2. 取得遊戲連結
  public function game_link(){
    if(!$this->power){exit();}
    $user_name = 'og2test001';

    $request = $this->getRequest();

    //var_dump($request);

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      //處理 is_iframe
      if(isset($request['is_mobile']) && strlen($request['is_mobile'])){
        $is_mobile = $request['is_mobile'];
      }

      $og2 = D('GameOg2');

      $err = null;
      $res = $og2->loginMember(array(
        'user_name' => $user_name,
        'is_mobile' => ($is_mobile=='mobile'),
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'loginMember');
    $this->assign('method_desc', '用現存遊戲帳號取得遊戲的連結');
    $this->assign('user_name', $user_name);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //3. 取得會員餘額
  public function balance(){
      if(!$this->power){exit();}
    $user_name = 'og2test001';

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      $og2 = D('GameOg2');

      $err = null;
      $res = $og2->getMemberBalance(array(
        'user_name' => $user_name,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getMemberBalance');
    $this->assign('method_desc', '取得會員的當前餘額');
    $this->assign('user_name', $user_name);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //4. 上點
  public function deposit(){
      if(!$this->power){exit();}
    $user_name = 'og2test001';
    $amount = 1;

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      //檢查是否有 amount 傳入 並且不為空
      if(!isset($request['amount']) || empty($request['amount'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入
      }
      $amount = $request['amount'];

      $err = null;
      $og2 = D('GameOg2');

      $res = $og2->rechargeMemberBalance(array(
        'user_name' => $user_name,
        'amount' => $amount,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'rechargeMemberBalance');
    $this->assign('method_desc', '增加會員的點數餘額');
    $this->assign('user_name', $user_name);
    $this->assign('amount', $amount);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //5. 下點
  public function withdraw(){
      if(!$this->power){exit();}
    $user_name = 'og2test001';
    $amount = 1;

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      //檢查是否有 amount 傳入 並且不為空
      if(!isset($request['amount']) || empty($request['amount'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//帳號為空，請重新輸入
      }
      $amount = $request['amount'];

      $err = null;
      $og2 = D('GameOg2');

      $res = $og2->withdrawMemberBalance(array(
        'user_name' => $user_name,
        'amount' => $amount,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'withdrawMemberBalance');
    $this->assign('method_desc', '減少會員的點數餘額');
    $this->assign('user_name', $user_name);
    $this->assign('amount', $amount);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //6. 抓報表明細
  public function report(){
      if(!$this->power){exit();}
    $begin_datetime = date('Y-m-d H:00:00');
    $end_datetime = date('Y-m-d H:10:00');

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      $og2 = D('GameOg2');

      $arrDatas = array();

      //處理 begin_datetime
      if(isset($request['begin_datetime']) && strlen($request['begin_datetime'])){
        $begin_datetime = $request['begin_datetime'];
      } else {
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//begin_datetime 為空，請重新輸入
      }

      //處理 end_datetime
      if(isset($request['end_datetime']) && strlen($request['end_datetime'])){
        $end_datetime = $request['end_datetime'];
      } else {
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//end_datetime 為空，請重新輸入
      }

      $err = null;
      $res = $og2->getGameRecord(array(
        'begin_datetime' => $begin_datetime,
        'end_datetime' => $end_datetime,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'getGameRecord');
    $this->assign('method_desc', '抓取注單明細, 開始與結束時間相距不能超過10分鐘。每次查詢相距限制為10秒以上。');
    $this->assign('begin_datetime', $begin_datetime);
    $this->assign('end_datetime', $end_datetime);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //7. setDefaultBetLimit
  public function set_default_bet_limit_id(){
      if(!$this->power){exit();}
    $video_limit_id = '69';  //69=(50,30000)
    $roulette_limit_id = '6';  //6=(50,750)

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 video_limit_id 傳入 並且不為空
      if(!isset($request['video_limit_id']) || empty($request['video_limit_id'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//video_limit_id 為空，請重新輸入
      }
      $video_limit_id = $request['video_limit_id'];

      //檢查是否有 roulette_limit_id 傳入 並且不為空
      if(!isset($request['roulette_limit_id']) || empty($request['roulette_limit_id'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//roulette_limit_id 為空，請重新輸入
      }
      $roulette_limit_id = $request['roulette_limit_id'];

      $og2 = D('GameOg2');

      $err = null;
      $res = $og2->setDefaultBetLimitId(array(
        'video_limit_id' => $video_limit_id,
        'roulette_limit_id' => $roulette_limit_id,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'setDefaultBetLimitId');
    $this->assign('method_desc', '設定成功操作後新創建的會員的限押及籌碼面額。');
    $this->assign('video_limit_id', $video_limit_id);
    $this->assign('roulette_limit_id', $roulette_limit_id);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

  //8. setDefaultBetLimit
  public function set_user_bet_limit_id(){
      if(!$this->power){exit();}
    $user_name = 'og2test001';
    $video_limit_id = '69';  //69=(50,30000)
    $roulette_limit_id = '6';  //6=(50,750)

    $request = $this->getRequest();

    if(isset($request['go']) && (($request['go'])==1)){

      //檢查是否有 video_limit_id 傳入 並且不為空
      if(!isset($request['video_limit_id']) || empty($request['video_limit_id'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//video_limit_id 為空，請重新輸入
      }
      $video_limit_id = $request['video_limit_id'];

      //檢查是否有 roulette_limit_id 傳入 並且不為空
      if(!isset($request['roulette_limit_id']) || empty($request['roulette_limit_id'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//roulette_limit_id 為空，請重新輸入
      }
      $roulette_limit_id = $request['roulette_limit_id'];

      //檢查是否有 user_name 傳入 並且不為空
      if(!isset($request['user_name']) || empty($request['user_name'])){
        $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));//帳號為空，請重新輸入
      }
      $user_name = $request['user_name'];

      $og2 = D('GameOg2');

      $err = null;
      $res = $og2->setUserBetLimitId(array(
        'user_name' => $user_name,
        'video_limit_id' => $video_limit_id,
        'roulette_limit_id' => $roulette_limit_id,
      ), $err);

      if ($res === false) {
        $op_result = $err;
        $op_result2 = $og2->curlError;
        $this->assign('op_result2', $op_result2);
      } else {
        $op_result = $res;
      }
    }

    $this->assign('method_name', 'setUserBetLimitId');
    $this->assign('method_desc', '修改單一現存會員的限押及籌碼面額。');
    $this->assign('user_name', $user_name);
    $this->assign('video_limit_id', $video_limit_id);
    $this->assign('roulette_limit_id', $roulette_limit_id);
    $this->assign('op_result', $op_result);
    $this->assign('form_action', __FUNCTION__);
    $this->display();
  }

}