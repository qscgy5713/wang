<?php
require('CryptDes/CryptDes.class.php');

class GameGGAction extends MemberAction {
    const API_NAME = 'GG 財神捕魚';
    protected $power = false;
    protected $gameName = "Gg";
    /*
     * 如果有初始化 可以設定在初始化中
     */
    //TODO:GG遊戲頁面 (財神捕魚)
    protected function _initialize() {
        parent::_initialize();
        
        $request = $this->getRequest();
        //測試API
        if(isset($request["MIS"]) && $request["MIS"]==="@@aaa123"){
            cookie('MIS','@@aaa123','expire=3600');
        }
        $MIS = cookie('MIS');
        
        if($MIS === "@@aaa123"){
            $this->power = true;
            $function_links = '';
            $function_links .= "<a href=\"__URL__/index\" target=\"_self\">創新帳號</a> | ";
            $function_links .= "<a href=\"__URL__/game_link\" target=\"_self\">遊戲連結</a> | ";
            $function_links .= "<a href=\"__URL__/deposit\" target=\"_self\">上點</a> | ";
            $function_links .= "<a href=\"__URL__/withdraw\" target=\"_self\">下點</a> | ";
            $function_links .= "<a href=\"__URL__/balance\" target=\"_self\">查點</a> | ";
            $function_links .= "<a href=\"__URL__/report\" target=\"_self\">報表</a>";
            $this->assign('function_links', $function_links);
            
            $this->assign('api_name', self::API_NAME);
            $this->assign('op_desc', '輸入參數按下送出');
        }
    }
    
    public function gameEnter(){
        $this->isMemberLoginShowErr();
        
        
        //取得遊戲連結 開始
        $data = array(
            "game_name" => $this->gameName
        );
        $return = $this->loginMember($data,$err);
        if($return === false){
            $this->assign('gameLink', "false");
            $this->assign('errMessage', $err);
            $this->display();
            return false;
        }
        $gameLink = $return;
        //取得遊戲連結 結束
        
        $memberWallet = $_SESSION['Member']['money'];
        if($memberWallet != 0){
            $data = array(
                "transferMoney" => $memberWallet,
                "gameName" => $this->gameName
            );
            $return = $this->walletTransferGameBalance($data,$err);
            if($return === false){
                $this->assign('gameLink', "false");
                $this->assign('errMessage', $err);
                $this->display();
                return false;
            }
            $this->getMemberWalletMoney();//讀取電子錢包
        }
        
        //取得點數 開始
        $data = array(
            "game_name" => $this->gameName
        );
        $return = $this->getMemberBalance($data,$err);
        if($return === false){
            $this->assign('gameLink', "false");
            $this->assign('errMessage', $err);
            $this->display();
            return false;
        }
        $memberBalance = $return;
        //取得點數 結束
        
        $this->assign('memberWallet', $memberWallet);//會員電子錢包
        $this->assign('memberBalance', $memberBalance);//會員遊戲餘額
        $this->assign('gameLink', $gameLink);//遊戲連結
        $this->display();
    }
    //1. 創新帳號
    public function index(){
        if(!$this->power){exit();}
        $user_name = 'test';
        $password = 'abcd1234';
        
        $request = $this->getRequest();
        
        if (isset($request['go']) && (($request['go'])==1)){
            //檢查是否有 user_name 傳入 並且不為空
            if (!isset($request['user_name']) || !strlen($request['user_name'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $user_name = $request['user_name'];
            
            //檢查是否有 password 傳入 並且不為空
            if (!isset($request['password']) || !strlen($request['password'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//密碼為空，請重新輸入
            }
            $password = $request['password'];
            
            $gg = D('GameGg');
            
            $err = null;
            $res = $gg->createMember(array(
                'user_name' => $user_name,
                'password' => $password,
            ), $err);
            
            if ($res === false) {
                $op_result = $err;
                $op_result2 = $gg->curlError;
                $this->assign('op_result2', $op_result2);
            } else {
                $op_result = $res;
            }
        }
        
        $this->assign('user_name', $user_name);
        $this->assign('password', $password);
        
        $this->assign('method_name', 'createMember');
        $this->assign('method_desc', '建立一個新的遊戲帳號');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
    
    //2. 取得遊戲連結
    public function game_link(){
        if(!$this->power){exit();}
        $user_name = 'test';
        $password = 'abcd1234';
        
        $request = $this->getRequest();
        
        if (isset($request['go']) && (($request['go'])==1)){
            
            //檢查是否有 user_name 傳入 並且不為空
            if (!isset($request['user_name']) || empty($request['user_name'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $user_name = $request['user_name'];
            
            //檢查是否有 password 傳入 並且不為空
            if (!isset($request['password']) || !strlen($request['password'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//密碼為空，請重新輸入
            }
            $password = $request['password'];
            
            //檢查是否有 game_code 傳入 並且不為空
            if (!isset($request['game_code']) || empty($request['game_code'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//game_code 為空，請重新輸入
            }
            $game_code = $request['game_code'];
            
            $gg = D('GameGg');
            
            $err = null;
            $res = $gg->loginMember(array(
                'user_name' => $user_name,
                'password' => $password,
                'game_code' => $game_code,
            ), $err);
            
            if ($res === false) {
                $op_result = $err;
                $op_result2 = $gg->curlError;
                $this->assign('op_result2', $op_result2);
            } else {
                $op_result = $res;
            }
        }
        
        $this->assign('user_name', $user_name);
        $this->assign('password', $password);
        
        $this->assign('method_name', 'loginMember');
        $this->assign('method_desc', '用現存遊戲帳號+遊戲代號進入遊戲');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
    
    //3. 取得會員餘額
    public function balance(){
        if(!$this->power){exit();}
        $user_name = 'test';
        $password = 'abcd1234';
        
        $request = $this->getRequest();
        
        if (isset($request['go']) && (($request['go'])==1)){
            
            //檢查是否有 user_name 傳入 並且不為空
            if (!isset($request['user_name']) || empty($request['user_name'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $user_name = $request['user_name'];
            
            //檢查是否有 password 傳入 並且不為空
            if (!isset($request['password']) || !strlen($request['password'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//密碼為空，請重新輸入
            }
            $password = $request['password'];
            
            $gg = D('GameGg');
            
            $err = null;
            $res = $gg->getMemberBalance(array(
                'user_name' => $user_name,
                'password' => $password,
            ), $err);
            
            if ($res === false) {
                $op_result = $err;
                $op_result2 = $gg->curlError;
                $this->assign('op_result2', $op_result2);
            } else {
                $op_result = $res;
            }
        }
        
        $this->assign('user_name', $user_name);
        $this->assign('password', $password);
        
        $this->assign('method_name', 'getMemberBalance');
        $this->assign('method_desc', '取得會員的當前餘額');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
    
    //4. 上點
    public function deposit(){
        if(!$this->power){exit();}
        $user_name = 'test';
        $password = 'abcd1234';
        $amount = 1;
        
        $request = $this->getRequest();
        
        if (isset($request['go']) && (($request['go'])==1)){
            
            //檢查是否有 user_name 傳入 並且不為空
            if (!isset($request['user_name']) || empty($request['user_name'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $user_name = $request['user_name'];
            
            //檢查是否有 password 傳入 並且不為空
            if (!isset($request['password']) || !strlen($request['password'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//密碼為空，請重新輸入
            }
            $password = $request['password'];
            
            //檢查是否有 amount 傳入 並且不為空
            if (!isset($request['amount']) || empty($request['amount'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));//數額為空，請重新輸入
            }
            $amount = $request['amount'];
            
            $err = null;
            $gg = D('GameGg');
            
            $res = $gg->rechargeMemberBalance(array(
                'user_name' => $user_name,
                'password' => $password,
                'amount' => $amount,
            ), $err);
            
            if ($res === false) {
                $op_result = $err;
                $op_result2 = $gg->curlError;
                $this->assign('op_result2', $op_result2);
            } else {
                $op_result = $res;
            }
        }
        
        $this->assign('user_name', $user_name);
        $this->assign('password', $password);
        $this->assign('amount', $amount);
        
        $this->assign('method_name', 'rechargeMemberBalance');
        $this->assign('method_desc', '增加會員的點數餘額');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
    
    //5. 下點
    public function withdraw(){
        if(!$this->power){exit();}
        $user_name = 'test';
        $password = 'abcd1234';
        $amount = 1;
        
        $request = $this->getRequest();
        
        if (isset($request['go']) && (($request['go'])==1)){
            
            //檢查是否有 user_name 傳入 並且不為空
            if (!isset($request['user_name']) || empty($request['user_name'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//帳號為空，請重新輸入
            }
            $user_name = $request['user_name'];
            
            //檢查是否有 password 傳入 並且不為空
            if (!isset($request['password']) || !strlen($request['password'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//密碼為空，請重新輸入
            }
            $password = $request['password'];
            
            //檢查是否有 amount 傳入 並且不為空
            if (!isset($request['amount']) || empty($request['amount'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));//數額為空，請重新輸入
            }
            $amount = $request['amount'];
            
            $err = null;
            $gg = D('GameGg');
            
            $res = $gg->withdrawMemberBalance(array(
                'user_name' => $user_name,
                'password' => $password,
                'amount' => $amount,
            ), $err);
            
            if ($res === false) {
                $op_result = $err;
                $op_result2 = $gg->curlError;
                $this->assign('op_result2', $op_result2);
            } else {
                $op_result = $res;
            }
        }
        
        $this->assign('user_name', $user_name);
        $this->assign('password', $password);
        $this->assign('amount', $amount);
        
        $this->assign('method_name', 'withdrawMemberBalance');
        $this->assign('method_desc', '減少會員的點數餘額');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
    
    //6. 抓報表明細
    public function report(){
        if(!$this->power){exit();}
        $begin_datetime = date('Y-m-d H:i:s', time()-60*10);
        $end_datetime = date('Y-m-d H:i:s', time());
        $page = 1;
        
        $request = $this->getRequest();
        
        if (isset($request['go']) && (($request['go'])==1)){
            
            //檢查是否有 begin_datetime 傳入 並且不為空
            if (!isset($request['begin_datetime']) || empty($request['begin_datetime'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//開始時間為空，請重新輸入
            }
            $begin_datetime = $request['begin_datetime'];
            
            //檢查是否有 end_datetime 傳入 並且不為空
            if (!isset($request['end_datetime']) || empty($request['end_datetime'])){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));//結束時間為空，請重新輸入
            }
            $end_datetime = $request['end_datetime'];
            
            $gg = D('GameGg');
            
            $err = null;
            $res = $gg->getGameRecord(array(
                'begin_datetime' => $begin_datetime,
                'end_datetime' => $end_datetime,
            ), $err);
            
            if ($res === false) {
                $op_result = $err;
                $op_result2 = $gg->curlError;
                $this->assign('op_result2', $op_result2);
            } else {
                $op_result = $res;
            }
        }
        
        $this->assign('begin_datetime', $begin_datetime);
        $this->assign('end_datetime', $end_datetime);
        
        $this->assign('method_name', 'getGameRecord');
        $this->assign('method_desc', '抓取注單明細。');
        $this->assign('op_result', $op_result);
        $this->assign('form_action', __FUNCTION__);
        $this->display();
    }
}