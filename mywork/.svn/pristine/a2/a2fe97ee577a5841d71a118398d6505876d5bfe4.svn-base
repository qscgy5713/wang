<?php
class MemberPointAction extends AdminAction {
    //TODO:9 會員點數
    public function index(){
        $request = $this->getRequest();
        if(!isset($request['memberAccount']) || empty($request['memberAccount'])){
            $searchArray = array();
            $searchJson = json_encode($searchArray);
            $this->assign("searchJson",$searchJson);
            $this->display();
            exit();
        }

        $this->assign("MemberPointBool",true);
        $this->assign("memberAccount",$request['memberAccount']);

        if(isset($request['typeMoney']) && !empty($request['typeMoney'])){
            switch ($request['typeMoney']){
                case 'additionMoney':
                    $this->formAddMemberPoint($request);//對會員上點
                    break;
                case 'deductMoney':
                    $this->formDeductMemberPoint($request);//對會員下點
                    break;
            }
        }
        if(isset($request['gameOperType']) && !empty($request['gameOperType'])){
            switch ($request['gameOperType']){
                case 'gameAdditionMoney':
                    $this->formAddMemberGamePoint($request);//對會員遊戲上點
                    break;
                case 'gameDeductMoney':
                    $this->formDeductMemberGamePoint($request);//對會員遊戲下點
                    break;
            }
        }
        //var_dump($request);exit();

        //讀取電子錢包金額 開始
        $CommonMember = D("CommonMember");
        $data = array(
            "member_account" => $request['memberAccount']
        );
        $return = $CommonMember->getMemberWalletByAccount($data);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }
        if(empty($return)){
            //$this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'))); //找不到會員 帳號 和 電話a
            //搜尋 各館帳號
            $GameInfo = D("GameInfo");
            $data = array(
                'game_account' => $request['memberAccount']
            );
            $return = $GameInfo->getMemberIdByGameAccount($data);
            if(empty($return)){
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'))); //找不到會員 帳號 和 電話a
            }
        }
        
        $memberAccount = $return['member_account'];
        $memberId = $return['member_id'];//會員ID
        $walletMoney = $return['wallet_money'];//電子錢包
        //讀取電子錢包金額 結束

        $_SESSION["MemberPoint"]["memberId"] = $memberId;
        $searchArray = array();//使用js 讀取會員點數的陣列
        $gameArray = $this->getMemberInfo($searchArray);//讀取 會員各館 資料
        foreach ($gameArray as $key => $value) {
            foreach ($value as $key1 => $value1) {
                $textArray = json_decode($value1['gameName'], true);
                $gameArray[$key][$key1]['gameName'] = $textArray[$_COOKIE['think_language']];
            }
        }
        $CommonEvent = D("CommonEvent");
        $return = $CommonEvent->getEventData();
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        $eventArray = $return;

        $searchJson = json_encode($searchArray);
        //var_dump($searchJson);

        $this->assign("walletMoney",$walletMoney);
        $this->assign("searchJson",$searchJson);
        $this->assign("gameArray",$gameArray);
        $this->assign("eventArray",$eventArray);
        $this->assign("memberAccount", $memberAccount);
        $this->display();
    }
    /*
     * 對會員手動上點
     */
    protected function formAddMemberPoint($request){
        if(!isset($request['upType']) || empty($request['upType'])){
            //類別顯示名稱為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }
        if(!isset($request['upMoney']) || empty($request['upMoney'])){
            //類別顯示名稱為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        if(!is_numeric($request['upMoney'])){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        switch($request['upType']){
            case 3://轉移問題
                $walletLog_item_id = $request['upGameId'];
                break;
            case 4://活動問題
                $walletLog_item_id = $request['upEventId'];
                break;
            case 5://返水問題
                $walletLog_item_id = $request['upGameId'];
                break;
            case 6://其他
                $walletLog_item_id = 0;
                break;
            default:
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_04')));
                break;
        }
        $CommonMemberWallet = D("CommonMemberWallet");
        $data = array(
            "member_id"=>$_SESSION["MemberPoint"]["memberId"],
            "addMoney"=>$request['upMoney'],
            "upMain"=>$request['upMain'],
            "walletLog_type"=>$request['upType'],
            "walletLog_item_id"=>$walletLog_item_id,
            "admin_id"=>$_SESSION["Admin"]["id"],
        );
        $return = $CommonMemberWallet->setWalletDataByAdditionMoneyUseMemberPoint($data,$err);
        if($return === false){
            $this->error($err);
        }
    }
    /*
     * 對會員手動下點
     */
    protected function formDeductMemberPoint($request){
        if(!isset($request['upType']) || empty($request['upType'])){
            //類別顯示名稱為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }
        if(!isset($request['upMoney']) || empty($request['upMoney'])){
            //類別顯示名稱為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        if(!is_numeric($request['upMoney'])){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        switch($request['upType']){
            case 3://轉移問題
                $walletLog_item_id = $request['upGameId'];
                break;
            case 4://活動問題
                $walletLog_item_id = $request['upEventId'];
                break;
            case 5://返水問題
                $walletLog_item_id = $request['upGameId'];
                break;
            case 6://其他
                $walletLog_item_id = 0;
                break;
            default:
                $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_04')));
                break;
        }
        $CommonMemberWallet = D("CommonMemberWallet");
        $data = array(
            "member_id"=>$_SESSION["MemberPoint"]["memberId"],
            "deductMoney"=>$request['upMoney'],
            "upMain"=>$request['upMain'],
            "walletLog_type"=>$request['upType'],
            "walletLog_item_id"=>$walletLog_item_id,
            "admin_id"=>$_SESSION["Admin"]["id"],
        );
        $return = $CommonMemberWallet->setWalletDataByDeductMoneyUseMemberPoint($data,$err);
        if($return === false){
            $this->error($err);
        }
    }
    
    /*
     * 對會員遊戲點數 手動上點
     */
    protected function formAddMemberGamePoint($request){
        if(!isset($request['gameCode']) || empty($request['gameCode'])){
            //操作遊戲為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }
        if(!isset($request['gameOpertingMoney']) || empty($request['gameOpertingMoney'])){
            //類別顯示名稱為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        if(!is_numeric($request['gameOpertingMoney'])){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        $GameInfo = D("GameInfo");
        $data = array(
            'game_code' => $request['gameCode']
        );
        $return = $GameInfo->getGameIdDataByGameCode($data,$err);
        if($return === false){
            $this->error($err);
        }
        if(empty($return)){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_04')));//無此遊戲code
        }
        $gameId = $return['game_id'];
        $gameName = json_decode($return['game_name'], true);
        
        //查 遊戲點數 開始
        $data = array(
            "game_name" => $request['gameCode'],
            "member_id"=>$_SESSION["MemberPoint"]["memberId"]
        );
        $return = $this->getMemberBalance($data,$err);
        if($return === false){
            $this->error($err);
        }
        $walletLogBefore = (int)$return;
        //查 遊戲點數 結束
        
        //對 遊戲上點 開始
        $data = array(
            "game_name" => $request['gameCode'],
            "money" => (int)$request['gameOpertingMoney'],
            "member_id"=>$_SESSION["MemberPoint"]["memberId"]
        );
        $return = $this->rechargeMemberBalance($data,$err);
        if($return === false){
            $this->error($err);
        }
        //對 遊戲上點 結束
        
        //查 遊戲點數 開始
        $data = array(
            "game_name" => $request['gameCode'],
            "member_id"=>$_SESSION["MemberPoint"]["memberId"]
        );
        $return = $this->getMemberBalance($data,$err);
        if($return === false){
            $this->error($err);
        }
        $walletLogAfter = (int)$return;
        //查 遊戲點數 結束
        
        $data = array(
            "member_id"=>$_SESSION["MemberPoint"]["memberId"],
            "addMoney"=>$request['gameOpertingMoney'],
            "upLocal" => '後台對遊戲上點',
            "upMain"=>$request['upGameMain'],
            "walletLog_operating"=>1,
            "walletLog_type"=>6,
            "walletLog_item_id"=>$gameId,
            "upGameName"=> $gameName[$_COOKIE['think_language']],
            "admin_id"=>$_SESSION["Admin"]["id"],
            "walletLogBefore"=>$walletLogBefore,
            "walletLogAfter"=>$walletLogAfter
        );
        $return = $GameInfo->setGamePointUseMemberPoint($data,$err);
        if($return === false){
            $this->error($err);
        }
    }
    
    /*
     * 對會員遊戲點數 手動下點
     */
    protected function formDeductMemberGamePoint($request){
        if(!isset($request['gameCode']) || empty($request['gameCode'])){
            //操作遊戲為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }
        if(!isset($request['gameOpertingMoney']) || empty($request['gameOpertingMoney'])){
            //類別顯示名稱為空，請重新輸入
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        if(!is_numeric($request['gameOpertingMoney'])){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03')));
        }
        $GameInfo = D("GameInfo");
        $data = array(
            'game_code' => $request['gameCode']
        );
        $return = $GameInfo->getGameIdDataByGameCode($data,$err);
        if($return === false){
            $this->error($err);
        }
        if(empty($return)){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_04')));//無此遊戲code
        }
        $gameId = $return['game_id'];
        $gameName = json_decode($return['game_name'], true);
        
        //查 遊戲點數 開始
        $data = array(
            "game_name" => $request['gameCode'],
            "member_id"=>$_SESSION["MemberPoint"]["memberId"]
        );
        $return = $this->getMemberBalance($data,$err);
        if($return === false){
            $this->error($err);
        }
        $walletLogBefore = $return;
        //查 遊戲點數 結束
        
        //對 遊戲下點 開始
        $data = array(
            "game_name" => $request['gameCode'],
            "money" => (int)$request['gameOpertingMoney'],
            "member_id"=>$_SESSION["MemberPoint"]["memberId"]
        );
        $return = $this->withdrawMemberBalance($data,$err);
        if($return === false){
            $this->error($err);
        }
        //對 遊戲下點 結束
        
        //查 遊戲點數 開始
        $data = array(
            "game_name" => $request['gameCode'],
            "member_id"=>$_SESSION["MemberPoint"]["memberId"]
        );
        $return = $this->getMemberBalance($data,$err);
        if($return === false){
            $this->error($err);
        }
        $walletLogAfter = $return;
        //查 遊戲點數 結束
        
        $data = array(
            "member_id"=>$_SESSION["MemberPoint"]["memberId"],
            "addMoney"=>$request['gameOpertingMoney'],
            "upLocal" => '後台對遊戲下點',
            "upMain"=>$request['upGameMain'],
            "walletLog_operating"=>2,
            "walletLog_type"=>6,
            "walletLog_item_id"=>$gameId,
            "upGameName"=> $gameName[$_COOKIE['think_language']],
            "admin_id"=>$_SESSION["Admin"]["id"],
            "walletLogBefore"=>$walletLogBefore,
            "walletLogAfter"=>$walletLogAfter
        );
        $return = $GameInfo->setGamePointUseMemberPoint($data,$err);
        if($return === false){
            $this->error($err);
        }
    }
    
    //讀取 會員各館 資料
    protected function getMemberInfo(&$searchArray){

        $GameInfo = D("GameInfo");
        $return = $GameInfo->getAllGameNameData();
        //var_dump($return);
        if($return === false){
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));//讀取菜單失敗，請重新登入
        }
        $gameArray = array();
        $i = 0;
        foreach ($return as $key => $value){
            if(count($gameArray[$value['gameClass_showName']]) == 0){
                $i = 0;
            }
            $data = array(
                "gameId"=>$value['game_id'],
                "gameCode"=>$value['game_code'],
                "gameName"=>$value['game_name'],
                "gameEnabled"=>$value['game_enabled'],
                "accountBool" => false,
                "gameAccount"=>""
            );
            $gameArray[$value['gameClass_showName']][ucfirst($value['game_code'])] = $data;
        }
        //var_dump($gameArray);exit();

        $searchStr = "";
        foreach ($gameArray as $gameClass => $classArray){
            foreach ($classArray as $gameCode => $gameBool){
                if($gameBool['gameEnabled'] == 0){
                    continue;
                }

                //讀取 會員資料
                $MemberInfo = D("Game".$gameCode."MemberInfo");
                $data = array(
                    "member_id" => $_SESSION["MemberPoint"]["memberId"]
                );
                $return = $MemberInfo->getMemberInfoDataByMemberId($data,$err);
                //var_dump($return);
                if($return === false){
                    //資料庫錯誤
                    return false;
                }
                if(!empty($return["info_id"])){
                    array_push($searchArray,$gameCode);
                    $searchStr .= ",".$gameCode;
                    $gameArray[$gameClass][$gameCode]["accountBool"] = true;
                    $gameArray[$gameClass][$gameCode]["gameAccount"] = $return["game_account"];
                }
            }
        }
        cookie('searchStr',$searchStr);
        return $gameArray;
    }


    /*
     * 取得會員點數
     */
    public function ajaxGetMemberPoint(){
        $request = $this->getRequest();
        $searchStr = cookie('searchStr');
        if(strpos($searchStr, $request['gameCode'])){
            $data = array(
                "member_id" => $_SESSION["MemberPoint"]["memberId"],
                "game_name" => $request['gameCode']
            );
            $return = $this->getMemberBalance($data,$err);
            if($return === false){
                echo 'false;'.$request['gameCode']."->".$err;
                return;
            }
            echo intval($return);
            return;
        }
        echo 'false';
    }
    /*
     * 重製 遊戲帳號
     */
    public function ajaxRemakeMemberGameAccount(){
        $request = $this->getRequest();
        $data = array(
            "member_id" => $_SESSION["MemberPoint"]["memberId"],
            "game_name" => $request['gameCode']
        );
        $return = $this->remakeMemberGameAccount($data,$err);
        if($return === false){
            echo 'false;'.$request['gameCode']."->".$err;
            return;
        }
        echo '遊戲帳號 重製 完成，請會員重新進入遊戲。';
    }

    /*
     * 開通 遊戲帳號
     */
    public function ajaxOpenMemberGameAccount(){
        $request = $this->getRequest();
        $data = array(
            "member_id" => $_SESSION["MemberPoint"]["memberId"],
            "game_name" => $request['gameCode']
        );
        $return = $this->createMember($data,$err);
        if($return === false){
            echo 'false;'.$request['gameCode']."->".$err;
            return;
        }
        echo '遊戲帳號 開通 完成，請會員重新進入遊戲。;'.$return['game_account'];
    }

    public function searchMemberName() {
        // 判斷有無輸入
        $request = $this->getRequest();
        if (empty($request["query"])) {
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }

        $CommonMember = D("CommonMember");
        $limit = 7;
        $data = array(
            "member_acount" => $request["query"],
            "limit"=> 7
        );
        $member_child_arr = $CommonMember->searchMemberByMemberAccount($data);
        if ($member_child_arr === false) {
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        foreach ($member_child_arr as $member_child) {
            $can_send_name[] = $member_child["member_account"];
        }
        echo json_encode($can_send_name);
    }
}