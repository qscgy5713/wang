<?php
class MemberWalletlogAction extends AdminAction {
    protected $memberWalletlog = 10; //分頁筆數
    protected $pageMoreNumber = 5; //一頁最多幾筆
    //TODO: 帳變查詢首頁
    public function index(){
        //使用 common.php filterStr($data) 公用函數 過濾取得輸入的資料
        $request = $this->getRequest();

        $today = date('Y-m-d');
        $startTime = $today.' 00:00:00';
        $endTime = $today.' 23:59:59';

        if(isset($request['startTime'])){
            $startTime = $request['startTime'];
        }
        if(isset($request['endTime'])){
            $endTime = $request['endTime'];
        }


        if(date('D') === 'Mon') {
            $tsThisWeek = strtotime('today');
        } else {
            $tsThisWeek = strtotime('last monday');
        }
        $tsYesterday = strtotime('yesterday');
        $tsLastMonth = strtotime('last month')-((60*60*24*(date('d')-1)));
        $tsThisMonth = strtotime('this month')-((60*60*24*(date('d')-1)));
        $lastWeekA = date('Y-m-d',$tsThisWeek-(60*60*24*7));
        $lastWeekB = date('Y-m-d',$tsThisWeek-(60*60*24*1));
        $thisWeekA = date('Y-m-d',$tsThisWeek+(60*60*24*0));
        $thisWeekB = date('Y-m-d',$tsThisWeek+(60*60*24*6));
        $yesterday = date('Y-m-d',$tsYesterday);
        $lastMonthA = date('Y-m-d',$tsLastMonth);
        $lastMonthB = date('Y-m-d',$tsLastMonth+(60*60*24*(cal_days_in_month(CAL_GREGORIAN,date("m",strtotime($lastMonthA)),date("Y", strtotime($lastMonthA)))-1)));
        $thisMonthA = date('Y-m-d',$tsThisMonth);
        $thisMonthB = date('Y-m-d',$tsThisMonth+(60*60*24*(cal_days_in_month(CAL_GREGORIAN,date("m"),date("Y"))-1)));
        $this->assign("startTime",$startTime);//查詢開始時間
        $this->assign("endTime",$endTime);//查詢最後時間
        $this->assign("today",$today);//今日
        $this->assign("yesterday",$yesterday);//昨日
        $this->assign("thisWeekA",$thisWeekA);//本週第一天
        $this->assign("thisWeekB",$thisWeekB);//本週最後一天
        $this->assign("lastWeekA",$lastWeekA);//上週第一天
        $this->assign("lastWeekB",$lastWeekB);//上週最後一天
        $this->assign("thisMonthA",$thisMonthA);//本月第一天
        $this->assign("thisMonthB",$thisMonthB);//本月最後一天
        $this->assign("lastMonthA",$lastMonthA);//上月第一天
        $this->assign("lastMonthB",$lastMonthB);//上月最後一天
        $this->assign("empty","<tr><td style='text-align:center;color:#00FFFF;' colspan='10'>無帳變資料</td></tr>");//上月最後一天


        if(!isset($request['memberAccount']) || empty($request['memberAccount'])){
            $this->display();
            exit();
        }
        $this->assign("walletLogBool",true);
        $this->assign("memberAccount",$request['memberAccount']);

        //製作分頁
        $pageNumber = "";
        if(empty($request['pageNumber'])){
            $pageNumber = 1;
        } else {
            $pageNumber = $request['pageNumber'];
        }

        //讀取 帳變查詢
        $CommonMemberWalletLog = D("CommonMemberWalletLog");
        //CommonMemberWalletLog getMarqueeDate 取得 帳變查詢資料
        $data = array(
            "member_account"=>$request['memberAccount'],
            "startTime"=>strtotime($startTime),
            "endTime"=>strtotime($endTime)
        );
        //取得總筆數
        $return = $CommonMemberWalletLog->getWalletLogTotalNumberByMemberAccount($data,$err);
        if($return === false){
            $this->error($err);
        }
        $totalNumber = $return['totalNumber']; //總筆數
        $totalPage = ceil($totalNumber / $this->memberWalletlog); //總頁數
        $pageArray = getPageArray($pageNumber, $totalPage, $this->pageMoreNumber); //頁數陣列
        $data = array(
            "member_account"=>$request['memberAccount'],
            "startTime"=>strtotime($startTime),
            "endTime"=>strtotime($endTime),
            "page" => array(
                'number' => $this->memberWalletlog,
                'pageNumber' => $pageNumber,
            ),
        );
        //取得分頁資料
        $return = $CommonMemberWalletLog->getWalletLogDataPageByMemberAccount($data,$err);
        if($return === false){
            $this->error($err);
        }
        //var_dump($return);exit();
        $showArray = array();
        //使用欄位轉換  資料庫欄位 => 輸出名稱
        $FieldChange = array(
            "walletLog_id"=>"id",
            "member_account"=>"account",
            "walletLog_operating"=>"operating",//帳變操作
            "walletLog_type"=>"type",//帳變類型
            "walletLog_money"=>"money",//帳變金額
            "walletLog_before"=>"before",//帳變前
            "walletLog_after"=>"after",//帳變後
            "walletLog_main"=>"main",//操作內容
            "walletLog_ip"=>"ip",
            "walletLog_createTime"=>"createTime"
        );
        $showStr = "";
        //var_dump($return);
        foreach ($return as $key => $value){
            foreach ($FieldChange as $key1 => $value1){
                //欄位特別處理
                switch ($key1){
                    case 'walletLog_money':
                        //$showStr = $CommonMemberWalletLog->getMoneyStatus($return[$key]['walletLog_operating'],$value[$key1]);
                        if($value[$key1] < 0){
                            $showStr = "<span style='color:red;'>".$value[$key1]."</span>";
                        } else {
                            $showStr = "<span style='color:blue;'>".$value[$key1]."</span>";
                        }
                        break;
                    case 'walletLog_operating':
                        $showStr = $CommonMemberWalletLog->getOperating($value[$key1]);
                        break;
                    case 'walletLog_type':
                        $showStr = $CommonMemberWalletLog->getType($value[$key1]);
                        break;
                    case 'walletLog_ip':
                        $showStr = get_ip_inet_ntop($value[$key1]);
                        break;
                    case 'walletLog_createTime'://代理建立時間 時間戳 轉換 日期
                        $showStr = date('Y-m-d H:i:s', $value[$key1]);
                        break;
                    case 'walletLog_main':
                        $returnArray = $CommonMemberWalletLog->getMainStr($value[$key1]);
                        if($returnArray === false){
                            $showArray[$key]['mainStr'] = "取得內容失敗";
                            $showArray[$key]['mainType'] = "取得上點方式失敗";
                        } else {
                            $showArray[$key]['mainStr'] = $returnArray['str'];
                            $showArray[$key]['mainType'] = $returnArray['type'];
                        }
                        $showStr = "";
                        break;
                    default://未做設定 正常顯示
                        $showStr = $value[$key1];
                        break;
                }
                $showArray[$key][$value1] = $showStr;
            }
        }
        //var_dump($showArray);exit();
        $this->assign("showArray",$showArray);
        $this->assign("pageNumber",$pageNumber); //目前頁數
        $this->assign("totalPage",$totalPage); //總頁數
        $this->assign("pageArray",$pageArray); //頁數陣列
        $this->assign("memberEmpty","<tr><td colspan='10' align='center'>無會員資料</td></tr>"); //頁數陣列
        $this->display();
    }

    public function searchMemberName() {
        // 判斷有無輸入
        $request = $this->getRequest();
        if (empty($request["query"])) {
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01')));
        }

        $CommonMember = D("CommonMember");
        $limit = 7;
        $data = array(
            "member_acount" => $request["query"],
            "agent_id" => $_SESSION["Agent"]["id"],
            "limit"=> 7
        );
        $member_child_arr = $CommonMember->searchMemberByMemberAccount($data);
        if ($member_child_arr === false) {
            $this->error(L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02')));
        }
        foreach ($member_child_arr as $member_child) {
            $can_send_name[] = $member_child["member_account"];
        }
        echo json_encode($can_send_name);
    }
}