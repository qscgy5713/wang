<?php
/*
 * 會員帳變紀錄
 */
class CommonMemberWalletLogModel extends MemberModel {
    protected $tableName = "common_member_wallet_log";
    protected $tableId = "walletLog_id";
    
    /*
     * 取得 會員 贈點 資料筆數
     */
    public function getTotalNumberGivenData($data,&$err=""){
        
        $sql = "SELECT count(*) AS totalNumber FROM `{$this->tableName}`
                WHERE `walletLog_createTime` > '{$data['walletLog_createTime']}' 
                AND `member_id` = '{$data['member_id']}' 
                AND `walletLog_type` = 4;";
        $return = $this->query($sql);
        if($return === false){
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_01"));
            return false;
        }
        return $return[0];
    }
    /*
     * 取得 會員 贈點資料
     */
    public function getMemberGivenData($data,&$err = ""){
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));
            return false;
        }
        $pageStrat = ($data["page"]["pageNumber"]-1)*$data["page"]["number"];
        $pageEnd = $data["page"]["number"];
        $pageSql = " LIMIT ".$pageStrat.",".$pageEnd;
        
        $sql = "SELECT * FROM `{$this->tableName}`
                WHERE `walletLog_createTime` > '{$data['walletLog_createTime']}' 
                AND `member_id` = '{$data['member_id']}'
                AND `walletLog_type` = 4 
                ORDER BY `walletLog_createTime` DESC
                {$pageSql} ;";
        $return = $this->query($sql);
        if($return === false){
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_01"));
            return false;
        }
        return $return;
    }
    /**
     * 新增 帳變紀錄 資料
     * @param $data //$data['member_id']
     * @param $err //錯誤訊息
     * @return boolean
     */
    public function addWalletLogData($data,&$err = ""){
        
        if(empty($data['member_id']) && $data['member_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_01'));
            return false;
        }
        if(empty($data['agent_id']) && $data['agent_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_02'));
            return false;
        }
        if(empty($data['walletLog_operating']) && $data['walletLog_operating'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_03'));
            return false;
        }
        if(empty($data['walletLog_type']) && $data['walletLog_type'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_04'));
            return false;
        }
        if(empty($data['walletLog_item_id']) && $data['walletLog_item_id'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_05'));
            return false;
        }
        if(empty($data['walletLog_money']) && $data['walletLog_money'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_06'));
            return false;
        }
        if(empty($data['walletLog_before']) && $data['walletLog_before'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_07'));
            return false;
        }
        if(empty($data['walletLog_after']) && $data['walletLog_after'] !== 0){
            $err = L(strtoupper('ERROR_' . __CLASS__ . '_' . __FUNCTION__ . '_08'));
            return false;
        }
        $sql = "INSERT INTO `{$this->tableName}` ";
        $keysql = "";
        $valuesql = "";
        foreach ($data as $key => $value) {
            if(empty($keysql)){
                $keysql = " (`{$key}`";
            } else {
                $keysql .= ",`{$key}`";
            }
            if(empty($valuesql)){
                $valuesql = " ('{$value}'";
            } else {
                $valuesql .= ",'{$value}'";
            }
        }
        $sql .= $keysql.") VALUES ".$valuesql.");";
        $return = $this->query($sql);
        if($return === false){
            $err = L(strtoupper("ERROR_" . __CLASS__ . "_" . __FUNCTION__ . "_09"));
            return $return;
        }
        //新增成功 回傳ID
        $insertId = $this->getLastInsertId();
        if($insertId === false) {
            return false;
        }
        return $insertId;
    }
}